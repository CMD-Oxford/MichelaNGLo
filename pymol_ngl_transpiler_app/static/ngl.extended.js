/* This script adds to NGL the following...

* NGL.stageIds an object taht stores id: stages
* NGL.getStage(id) is a getter for this.
* NGL.specialOps
** NGL.specialOps.show_domain(id, selection, color), which focuses stage to show the given selection with the given color
** NGL.specialOps.show_residue(id, selection, color, radius), which focuses on the selection and their neighbourhood by n radius
** NGL.specialOps.show_clash(id, selection, color, radius, tolerance) which shows the clashes that selection may have
** NGL.specialOps.multiLoader(id, proteins, image, backgroundColor, startIndex), see below about proteins object
** NGL.specialOps.load(option)
** NGL.specialOps.removeImg() switches the image off
** NGL.specialOps._run_loadFx() and a few others.
** NGL.Stage.prototype.getComponentByType allowing stage objects to return a component.


proteins is an array of {name: 'unique_name', type: 'rcsb' (default) | 'file' | 'data', value: xxx, 'ext': 'pdb' (default), loadFx: xxx}
where the optional loadFx is a function that is run on loading.
*/


NGL.stageIds = {};

NGL.specialOps = {'note': 'This is a monkeypatch to allow HTML control of the structure using the markup defined in ngl.matteoferla.com/markup'};

NGL.specialOps.show_domain = function (id, selection, color) {
        // Prepare
        color = color || "green";
        //selection = typeof selection === "string" ? new NGL.Selection(selection) : selection;
        var protein = NGL.getStage(id).getComponentByType('structure');
        protein.removeAllRepresentations();
        // Color in!
        var schemeId = NGL.ColormakerRegistry.addSelectionScheme([[color, selection],["white", "*"]]);
        protein.addRepresentation( "cartoon", {color: schemeId, smoothSheet: true});
        protein.autoView(2000);
        protein.autoView(selection, 2000);
    };



NGL.specialOps.show_residue = function (id, selection, color, radius) {
        // Prepare
        var protein = NGL.getStage(id).getComponentByType('structure');
        color = color || "hotpink";
        radius = radius || 4;
        //selection = typeof selection === "string" ? new NGL.Selection(selection) : selection;
        // Remove all bar cartoon-like representation
        ['ball+stick', 'contact', 'hyperball', 'licorice','line', 'point','spacefill'].map(function (value) {
            protein.stage.getRepresentationsByName(value).forEach(function (o) {
                protein.removeRepresentation(o);
            }); //.forEach representation
        }); //.map representation name
        var schemeId = NGL.ColormakerRegistry.addSelectionScheme([
            [color,'_C'],["blue",'_N'],["red",'_O'],["white",'_H'],["yellow",'_S'],["orange","*"] //this is such a weird way of doing it.
        ]);
        var selector = new NGL.Selection(selection.toString());
        var atomSet = protein.structure.getAtomSetWithinSelection( selector , parseFloat(radius) );
        // expand selection to complete groups
        var atomSet2 = protein.structure.getAtomSetWithinGroup( atomSet );
        var licoriceRep = protein.addRepresentation( "licorice", { sele: atomSet2.toSeleString()} );
        var hyperRep = protein.addRepresentation( "hyperball", { sele: selection.toString(), color: schemeId} );
        protein.autoView(2000);
        protein.autoView(atomSet2.toSeleString(), 2000);
    };

NGL.specialOps.show_clash = function (id, selection, color, radius, tolerance) {
    // Prepare
    tolerance= tolerance || 1; //how much is the wiggle room. 0.2 &Aring; is probs good.
    radius = radius || 2;
    NGL.specialOps.show_residue(id, selection, color, radius);
    var protein = NGL.getStage(id).getComponentByType('structure');
    // Find what clashes...
    protein.structure.getView(new NGL.Selection(selection.toString())).eachAtom(function (atom) {
    protein.structure.eachAtom(function (neighbour) {
        if ((atom.distanceTo(neighbour) < atom.vdw + neighbour.vdw - tolerance) &&
            (!atom.hasBondTo(neighbour))                          //they are bonded so must be fine.
            && (atom.residueIndex !== neighbour.residueIndex)) { //self clashes are fine.
                var position = [atom.x / 2 + neighbour.x / 2, atom.y / 2 + neighbour.y / 2, atom.z / 2 + neighbour.z / 2];
                console.log('Clash between '+atom.atomname+' of residue ('+atom.vdw.toString()+' &Aring;) '+atom.residueIndex+' and '+
                    neighbour.atomname+' of residue '+neighbour.residueIndex+' ('+atom.vdw.toString()+' &Aring;). Distance: '+atom.distanceTo(neighbour).toString()+' cutoff: '+(atom.vdw + neighbour.vdw - tolerance).toString());
                // create the ball
                var refmesh=[0.1, -0.11, 0.02, 0.07, -0.14, 0.0, 0.1, -0.11, -0.02, -0.05, -0.14, -0.04, -0.1, -0.11, -0.04, -0.07, -0.11, -0.08, 0.0, -0.11, 0.11, -0.02, -0.14, 0.08, 0.02, -0.14, 0.06, 0.05, -0.11, -0.09, 0.07, -0.14, -0.05, 0.02, -0.14, -0.06, 0.1, 0.0, 0.13, 0.09, 0.0, 0.13, 0.05, 0.0, 0.15, 0.13, 0.0, 0.09, 0.13, 0.04, 0.06, 0.1, 0.04, 0.11, 0.16, 0.0, -0.05, 0.16, 0.0, -0.05, 0.16, 0.0, 0.0, -0.05, 0.0, 0.15, -0.02, 0.04, 0.15, -0.07, 0.04, 0.13, -0.16, 0.0, 0.0, -0.15, 0.04, 0.02, -0.15, 0.04, -0.02, -0.02, 0.04, -0.15, 0.0, 0.0, -0.17, -0.05, 0.0, -0.15, -0.09, 0.0, 0.13, -0.1, 0.0, 0.13, -0.13, 0.0, 0.09, -0.1, -0.04, -0.11, -0.13, -0.04, -0.06, -0.13, 0.0, -0.09, 0.07, -0.04, -0.13, 0.02, -0.04, -0.15, 0.05, 0.0, -0.15, 0.13, 0.04, -0.06, 0.16, 0.0, -0.05, 0.13, 0.0, -0.09, 0.07, 0.11, 0.08, 0.1, 0.11, 0.04, 0.05, 0.14, 0.04, -0.05, 0.11, 0.09, 0.0, 0.11, 0.11, -0.02, 0.14, 0.06, -0.1, 0.11, -0.02, -0.1, 0.11, 0.02, -0.07, 0.14, 0.0, 0.0, 0.11, -0.11, -0.05, 0.11, -0.09, -0.02, 0.14, -0.06, 0.1, 0.11, -0.04, 0.07, 0.11, -0.08, 0.05, 0.14, -0.04, 0.11, 0.08, 0.08, 0.13, 0.04, 0.06, 0.11, 0.08, 0.08, 0.02, -0.04, 0.15, 0.0, 0.0, 0.17, 0.02, -0.04, 0.15, 0.13, 0.0, -0.09, 0.16, 0.0, -0.05, 0.13, 0.0, -0.09, 0.05, 0.0, -0.15, 0.0, 0.0, -0.17, 0.05, 0.0, -0.15, 0.04, -0.08, 0.13, 0.02, -0.04, 0.15, 0.04, -0.08, 0.13, 0.1, 0.0, -0.13, 0.13, 0.0, -0.09, 0.1, 0.0, -0.13, 0.0, -0.11, 0.11, 0.04, -0.08, 0.13, 0.0, -0.11, 0.11, 0.07, -0.04, -0.13, 0.1, 0.0, -0.13, 0.07, -0.04, -0.13, 0.09, 0.0, -0.13, 0.05, 0.0, -0.15, 0.09, 0.0, -0.13, 0.1, 0.04, -0.11, 0.09, 0.0, -0.13, 0.1, 0.04, -0.11, 0.04, -0.08, -0.13, 0.07, -0.04, -0.13, 0.04, -0.08, -0.13, -0.04, 0.08, -0.13, -0.07, 0.04, -0.13, -0.04, 0.08, -0.13, -0.02, -0.14, 0.08, 0.0, -0.11, 0.11, -0.02, -0.14, 0.08, 0.05, -0.11, -0.09, 0.04, -0.08, -0.13, 0.05, -0.11, -0.09, -0.05, 0.11, -0.09, -0.04, 0.08, -0.13, -0.05, 0.11, -0.09, -0.07, -0.11, 0.08, -0.02, -0.14, 0.08, -0.07, -0.11, 0.08, 0.07, -0.14, 0.05, 0.1, -0.11, 0.02, 0.07, -0.14, 0.05, 0.07, -0.14, -0.05, 0.05, -0.11, -0.09, 0.07, -0.14, -0.05, -0.07, 0.14, -0.05, -0.05, 0.11, -0.09, -0.07, 0.14, -0.05, 0.05, -0.11, 0.09, 0.07, -0.14, 0.05, 0.05, -0.11, 0.09, 0.1, -0.11, -0.02, 0.07, -0.14, -0.05, 0.1, -0.11, -0.02, -0.1, 0.11, -0.02, -0.07, 0.14, -0.05, -0.1, 0.11, -0.02, 0.04, -0.08, 0.13, 0.05, -0.11, 0.09, 0.04, -0.08, 0.13, -0.14, 0.08, 0.0, -0.1, 0.11, -0.02, -0.14, 0.08, 0.0, 0.07, -0.04, 0.13, 0.04, -0.08, 0.13, 0.07, -0.04, 0.13, -0.07, 0.14, 0.05, -0.02, 0.14, 0.06, -0.07, 0.14, 0.05, 0.14, -0.08, 0.0, 0.1, -0.11, -0.02, 0.14, -0.08, 0.0, -0.15, 0.04, -0.02, -0.14, 0.08, 0.0, -0.15, 0.04, -0.02, -0.07, 0.14, 0.0, -0.07, 0.14, 0.05, -0.07, 0.14, 0.0, 0.15, -0.04, -0.02, 0.14, -0.08, 0.0, 0.15, -0.04, -0.02, 0.1, 0.0, 0.13, 0.07, -0.04, 0.13, 0.1, 0.0, 0.13, 0.04, -0.08, -0.13, 0.0, -0.11, -0.11, 0.04, -0.08, -0.13, -0.16, 0.0, -0.05, -0.15, 0.04, -0.02, -0.16, 0.0, -0.05, 0.13, 0.0, 0.09, 0.1, 0.0, 0.13, 0.13, 0.0, 0.09, -0.07, 0.14, -0.05, -0.07, 0.14, 0.0, -0.07, 0.14, -0.05, 0.02, -0.04, -0.15, 0.04, -0.08, -0.13, 0.02, -0.04, -0.15, -0.13, 0.0, -0.09, -0.16, 0.0, -0.05, -0.13, 0.0, -0.09, -0.02, 0.14, -0.06, -0.07, 0.14, -0.05, -0.02, 0.14, -0.06, 0.16, 0.0, 0.05, 0.13, 0.0, 0.09, 0.16, 0.0, 0.05, 0.0, 0.0, -0.17, 0.02, -0.04, -0.15, 0.0, 0.0, -0.17, 0.15, -0.04, 0.02, 0.16, 0.0, 0.05, 0.15, -0.04, 0.02, 0.02, 0.14, -0.08, -0.02, 0.14, -0.06, 0.02, 0.14, -0.08, -0.05, 0.0, -0.15, 0.0, 0.0, -0.17, -0.05, 0.0, -0.15, -0.1, 0.0, -0.13, -0.13, 0.0, -0.09, -0.1, 0.0, -0.13, 0.05, 0.14, -0.04, 0.02, 0.14, -0.08, 0.05, 0.14, -0.04, -0.07, 0.04, -0.13, -0.1, 0.0, -0.13, -0.07, 0.04, -0.13, -0.09, 0.0, -0.13, -0.05, 0.0, -0.15, -0.09, 0.0, -0.13, -0.14, 0.08, 0.0, -0.15, 0.04, 0.02, -0.14, 0.08, 0.0, 0.14, -0.08, 0.0, 0.15, -0.04, 0.02, 0.14, -0.08, 0.0, 0.08, 0.14, 0.0, 0.05, 0.14, -0.04, 0.08, 0.14, 0.0, -0.1, -0.04, -0.11, -0.09, 0.0, -0.13, -0.1, -0.04, -0.11, -0.1, 0.11, 0.02, -0.14, 0.08, 0.0, -0.1, 0.11, 0.02, 0.1, -0.11, 0.02, 0.14, -0.08, 0.0, 0.1, -0.11, 0.02, 0.05, 0.14, 0.04, 0.08, 0.14, 0.0, 0.05, 0.14, 0.04, -0.02, -0.14, 0.08, -0.05, -0.14, 0.04, -0.02, -0.14, 0.08, -0.11, -0.08, -0.08, -0.1, -0.04, -0.11, -0.11, -0.08, -0.08, -0.07, 0.14, 0.05, -0.1, 0.11, 0.02, -0.07, 0.14, 0.05, 0.02, -0.14, 0.06, -0.02, -0.14, 0.08, 0.02, -0.14, 0.06, -0.07, -0.11, -0.08, -0.11, -0.08, -0.08, -0.07, -0.11, -0.08, -0.05, 0.11, 0.09, -0.07, 0.14, 0.05, -0.05, 0.11, 0.09, 0.02, 0.14, 0.08, 0.05, 0.14, 0.04, 0.02, 0.14, 0.08, -0.11, -0.08, 0.08, -0.11, -0.08, 0.08, -0.1, -0.11, 0.04, -0.02, -0.14, -0.08, -0.07, -0.11, -0.08, -0.02, -0.14, -0.08, 0.14, -0.08, 0.0, 0.15, -0.04, 0.02, 0.14, -0.08, 0.0, -0.07, 0.04, 0.13, -0.04, 0.08, 0.13, -0.07, 0.04, 0.13, 0.1, 0.11, 0.04, 0.11, 0.08, 0.08, 0.1, 0.11, 0.04, 0.0, -0.11, -0.11, -0.02, -0.14, -0.08, 0.0, -0.11, -0.11, -0.11, -0.08, -0.08, -0.1, -0.11, -0.04, -0.11, -0.08, -0.08, 0.15, -0.04, 0.02, 0.16, 0.0, 0.05, 0.15, -0.04, 0.02, -0.1, 0.0, 0.13, -0.07, 0.04, 0.13, -0.1, 0.0, 0.13, 0.09, 0.14, 0.0, 0.1, 0.11, 0.04, 0.09, 0.14, 0.0, -0.13, -0.04, -0.06, -0.11, -0.08, -0.08, -0.13, -0.04, -0.06, 0.07, -0.14, 0.05, 0.02, -0.14, 0.06, 0.07, -0.14, 0.05, -0.13, 0.0, 0.09, -0.1, 0.0, 0.13, -0.13, 0.0, 0.09, 0.1, 0.11, -0.04, 0.09, 0.14, 0.0, 0.1, 0.11, -0.04, 0.13, 0.0, 0.09, 0.1, 0.0, 0.13, 0.13, 0.0, 0.09, -0.16, 0.0, -0.05, -0.13, -0.04, -0.06, -0.16, 0.0, -0.05, -0.02, -0.14, 0.08, -0.05, -0.14, 0.04, -0.02, -0.14, 0.08, 0.11, 0.08, -0.08, 0.1, 0.11, -0.04, 0.11, 0.08, -0.08, -0.16, 0.0, 0.0, -0.16, 0.0, -0.05, -0.16, 0.0, 0.0, -0.16, 0.0, 0.05, -0.13, 0.0, 0.09, -0.16, 0.0, 0.05, 0.13, 0.04, -0.06, 0.11, 0.08, -0.08, 0.13, 0.04, -0.06, 0.07, -0.04, 0.13, 0.04, -0.08, 0.13, 0.07, -0.04, 0.13, -0.15, 0.04, 0.02, -0.16, 0.0, 0.05, -0.15, 0.04, 0.02, -0.16, 0.0, 0.05, -0.16, 0.0, 0.0, -0.16, 0.0, 0.05, 0.16, 0.0, 0.05, 0.13, 0.0, 0.09, 0.16, 0.0, 0.05, -0.04, 0.08, 0.13, -0.02, 0.04, 0.15, -0.04, 0.08, 0.13, 0.16, 0.0, -0.05, 0.13, 0.04, -0.06, 0.16, 0.0, -0.05, -0.13, -0.04, 0.06, -0.16, 0.0, 0.05, -0.13, -0.04, 0.06, 0.04, -0.08, 0.13, 0.05, -0.11, 0.09, 0.04, -0.08, 0.13, 0.0, 0.11, 0.11, -0.04, 0.08, 0.13, 0.0, 0.11, 0.11, 0.16, 0.0, 0.0, 0.16, 0.0, -0.05, 0.16, 0.0, 0.0, -0.11, -0.08, 0.08, -0.13, -0.04, 0.06, -0.11, -0.08, 0.08, 0.1, 0.0, 0.13, 0.07, -0.04, 0.13, 0.1, 0.0, 0.13, 0.02, 0.14, 0.08, 0.0, 0.11, 0.11, 0.02, 0.14, 0.08, -0.1, -0.11, 0.04, -0.11, -0.08, 0.08, -0.1, -0.11, 0.04, 0.07, 0.11, 0.08, 0.02, 0.14, 0.08, 0.07, 0.11, 0.08, 0.16, 0.0, 0.05, 0.16, 0.0, 0.0, 0.16, 0.0, 0.05, 0.05, -0.11, 0.09, 0.07, -0.14, 0.05, 0.05, -0.11, 0.09, 0.13, 0.04, 0.06, 0.16, 0.0, 0.05, 0.13, 0.04, 0.06, 0.07, -0.14, 0.05, 0.1, -0.11, 0.02, 0.07, -0.14, 0.05, 0.11, 0.08, 0.08, 0.07, 0.11, 0.08, 0.11, 0.08, 0.08, 0.11, 0.08, -0.08, 0.1, 0.04, -0.11, 0.11, 0.08, -0.08, -0.09, -0.14, 0.0, -0.1, -0.11, 0.04, -0.09, -0.14, 0.0, 0.1, 0.04, 0.11, 0.11, 0.08, 0.08, 0.1, 0.04, 0.11, 0.07, 0.11, -0.08, 0.11, 0.08, -0.08, 0.07, 0.11, -0.08, -0.1, -0.11, -0.04, -0.09, -0.14, 0.0, -0.1, -0.11, -0.04, -0.11, -0.08, 0.08, -0.07, -0.11, 0.08, -0.11, -0.08, 0.08, 0.09, 0.0, 0.13, 0.1, 0.04, 0.11, 0.09, 0.0, 0.13, 0.02, 0.14, -0.08, 0.07, 0.11, -0.08, 0.02, 0.14, -0.08, -0.1, -0.04, 0.11, -0.11, -0.08, 0.08, -0.1, -0.04, 0.11, 0.05, 0.0, 0.15, 0.09, 0.0, 0.13, 0.05, 0.0, 0.15, 0.0, 0.11, -0.11, 0.02, 0.14, -0.08, 0.0, 0.11, -0.11, -0.09, 0.0, 0.13, -0.1, -0.04, 0.11, -0.09, 0.0, 0.13, -0.04, 0.08, -0.13, 0.0, 0.11, -0.11, -0.04, 0.08, -0.13, -0.05, 0.0, 0.15, -0.09, 0.0, 0.13, -0.05, 0.0, 0.15, 0.0, 0.0, 0.17, 0.05, 0.0, 0.15, 0.0, 0.0, 0.17, -0.02, 0.04, -0.15, -0.04, 0.08, -0.13, -0.02, 0.04, -0.15, -0.02, 0.04, 0.15, 0.0, 0.0, 0.17, -0.02, 0.04, 0.15, 0.0, 0.0, 0.17, -0.05, 0.0, 0.15, 0.0, 0.0, 0.17, 0.16, 0.0, -0.05, 0.15, -0.04, -0.02, 0.16, 0.0, -0.05, 0.0, 0.0, -0.17, -0.02, 0.04, -0.15, 0.0, 0.0, -0.17, 0.16, 0.0, -0.05, 0.15, -0.04, -0.02, 0.16, 0.0, -0.05, 0.0, 0.0, 0.17, -0.05, 0.0, 0.15, 0.0, 0.0, 0.17, -0.02, 0.04, 0.15, 0.0, 0.0, 0.17, -0.02, 0.04, 0.15, -0.02, 0.04, -0.15, -0.04, 0.08, -0.13, -0.02, 0.04, -0.15, 0.0, 0.0, 0.17, 0.05, 0.0, 0.15, 0.0, 0.0, 0.17, -0.05, 0.0, 0.15, -0.09, 0.0, 0.13, -0.05, 0.0, 0.15, -0.04, 0.08, -0.13, 0.0, 0.11, -0.11, -0.04, 0.08, -0.13, -0.09, 0.0, 0.13, -0.1, -0.04, 0.11, -0.09, 0.0, 0.13, 0.0, 0.11, -0.11, 0.02, 0.14, -0.08, 0.0, 0.11, -0.11, 0.05, 0.0, 0.15, 0.09, 0.0, 0.13, 0.05, 0.0, 0.15, -0.1, -0.04, 0.11, -0.11, -0.08, 0.08, -0.1, -0.04, 0.11, 0.02, 0.14, -0.08, 0.07, 0.11, -0.08, 0.02, 0.14, -0.08, 0.09, 0.0, 0.13, 0.1, 0.04, 0.11, 0.09, 0.0, 0.13, -0.11, -0.08, 0.08, -0.07, -0.11, 0.08, -0.11, -0.08, 0.08, -0.1, -0.11, -0.04, -0.09, -0.14, 0.0, -0.1, -0.11, -0.04, 0.07, 0.11, -0.08, 0.11, 0.08, -0.08, 0.07, 0.11, -0.08, 0.1, 0.04, 0.11, 0.11, 0.08, 0.08, 0.1, 0.04, 0.11, -0.09, -0.14, 0.0, -0.1, -0.11, 0.04, -0.09, -0.14, 0.0, 0.11, 0.08, -0.08, 0.1, 0.04, -0.11, 0.11, 0.08, -0.08, 0.11, 0.08, 0.08, 0.07, 0.11, 0.08, 0.11, 0.08, 0.08, 0.13, 0.04, 0.06, 0.16, 0.0, 0.05, 0.13, 0.04, 0.06, 0.16, 0.0, 0.05, 0.16, 0.0, 0.0, 0.16, 0.0, 0.05, 0.07, 0.11, 0.08, 0.02, 0.14, 0.08, 0.07, 0.11, 0.08, -0.1, -0.11, 0.04, -0.11, -0.08, 0.08, -0.1, -0.11, 0.04, 0.02, 0.14, 0.08, 0.0, 0.11, 0.11, 0.02, 0.14, 0.08, -0.11, -0.08, 0.08, -0.13, -0.04, 0.06, -0.11, -0.08, 0.08, 0.16, 0.0, 0.0, 0.16, 0.0, -0.05, 0.16, 0.0, 0.0, -0.05, -0.14, 0.04, -0.08, -0.14, 0.0, -0.05, -0.14, 0.04, 0.0, 0.11, 0.11, -0.04, 0.08, 0.13, 0.0, 0.11, 0.11, -0.13, -0.04, 0.06, -0.16, 0.0, 0.05, -0.13, -0.04, 0.06, 0.16, 0.0, -0.05, 0.13, 0.04, -0.06, 0.16, 0.0, -0.05, -0.08, -0.14, 0.0, -0.05, -0.14, -0.04, -0.08, -0.14, 0.0, -0.04, 0.08, 0.13, -0.02, 0.04, 0.15, -0.04, 0.08, 0.13, -0.16, 0.0, 0.05, -0.16, 0.0, 0.0, -0.16, 0.0, 0.05, -0.15, 0.04, 0.02, -0.16, 0.0, 0.05, -0.15, 0.04, 0.02, 0.13, 0.04, -0.06, 0.11, 0.08, -0.08, 0.13, 0.04, -0.06, -0.16, 0.0, 0.05, -0.13, 0.0, 0.09, -0.16, 0.0, 0.05, -0.16, 0.0, 0.0, -0.16, 0.0, -0.05, -0.16, 0.0, 0.0, 0.11, 0.08, -0.08, 0.1, 0.11, -0.04, 0.11, 0.08, -0.08, -0.05, -0.14, -0.04, -0.02, -0.14, -0.08, -0.05, -0.14, -0.04, -0.16, 0.0, -0.05, -0.13, -0.04, -0.06, -0.16, 0.0, -0.05, -0.02, -0.14, -0.08, 0.02, -0.14, -0.06, -0.02, -0.14, -0.08, 0.1, 0.11, -0.04, 0.09, 0.14, 0.0, 0.1, 0.11, -0.04, -0.13, 0.0, 0.09, -0.1, 0.0, 0.13, -0.13, 0.0, 0.09, -0.13, -0.04, -0.06, -0.11, -0.08, -0.08, -0.13, -0.04, -0.06, 0.09, 0.14, 0.0, 0.1, 0.11, 0.04, 0.09, 0.14, 0.0, 0.02, -0.14, -0.06, 0.07, -0.14, -0.05, 0.02, -0.14, -0.06, -0.1, 0.0, 0.13, -0.07, 0.04, 0.13, -0.1, 0.0, 0.13, -0.11, -0.08, -0.08, -0.1, -0.11, -0.04, -0.11, -0.08, -0.08, 0.07, -0.14, -0.05, 0.07, -0.14, 0.0, 0.07, -0.14, -0.05, 0.0, -0.11, -0.11, -0.02, -0.14, -0.08, 0.0, -0.11, -0.11, 0.1, 0.11, 0.04, 0.11, 0.08, 0.08, 0.1, 0.11, 0.04, -0.07, 0.04, 0.13, -0.04, 0.08, 0.13, -0.07, 0.04, 0.13, -0.02, -0.14, -0.08, -0.07, -0.11, -0.08, -0.02, -0.14, -0.08, 0.11, 0.08, 0.08, 0.13, 0.04, 0.06, 0.11, 0.08, 0.08, 0.07, -0.14, 0.0, 0.07, -0.14, 0.05, 0.07, -0.14, 0.0, -0.04, 0.08, 0.13, -0.05, 0.11, 0.09, -0.04, 0.08, 0.13, -0.02, 0.14, 0.06, 0.02, 0.14, 0.08, -0.02, 0.14, 0.06, 0.07, -0.14, 0.05, 0.02, -0.14, 0.06, 0.07, -0.14, 0.05, 0.02, -0.14, -0.06, 0.01, -0.38, -0.01, 0.0, -0.38, -0.01, -0.02, 0.14, 0.06, -0.01, 0.38, 0.01, -0.07, 0.14, 0.05, 0.1, -0.11, -0.02, 0.28, -0.17, -0.18, 0.14, -0.08, 0.0, -0.15, 0.04, -0.02, -0.28, 0.17, -0.18, -0.29, 0.16, -0.19, -0.07, 0.14, 0.0, -0.01, 0.38, 0.01, -0.01, 0.38, 0.0, 0.15, -0.04, -0.02, 0.28, -0.17, -0.18, 0.29, -0.16, -0.19, -0.05, -0.14, -0.04, 0.0, -0.38, -0.01, -0.01, -0.38, 0.0, 0.0, -0.11, -0.11, -0.08, -0.17, -0.33, 0.04, -0.08, -0.13, -0.15, 0.04, -0.02, -0.29, 0.15, -0.19, -0.16, 0.0, -0.05, -0.07, 0.14, 0.0, -0.01, 0.38, -0.01, -0.07, 0.14, -0.05, 0.02, -0.04, -0.15, -0.08, -0.17, -0.33, -0.09, -0.16, -0.33, -0.13, 0.0, -0.09, -0.29, 0.15, -0.19, -0.28, 0.15, -0.2, 0.07, -0.14, 0.0, 0.01, -0.38, -0.01, 0.07, -0.14, -0.05, -0.02, 0.14, -0.06, -0.01, 0.38, -0.01, 0.0, 0.38, -0.01, 0.02, -0.04, -0.15, -0.09, -0.15, -0.33, 0.0, 0.0, -0.17, -0.02, 0.14, -0.06, 0.0, 0.38, -0.01, 0.02, 0.14, -0.08, -0.05, 0.0, -0.15, -0.09, -0.15, -0.33, -0.1, -0.15, -0.33, -0.13, 0.0, -0.09, -0.27, 0.15, -0.21, -0.1, 0.0, -0.13, 0.07, -0.14, 0.0, 0.01, -0.38, 0.01, 0.01, -0.38, 0.0, 0.05, 0.14, -0.04, 0.0, 0.38, -0.01, 0.01, 0.38, 0.0, -0.07, 0.04, -0.13, -0.27, 0.15, -0.21, -0.27, 0.16, -0.21, 0.1, -0.11, 0.02, 0.28, -0.17, 0.18, 0.28, -0.18, 0.19, -0.05, 0.0, -0.15, -0.11, -0.15, -0.33, -0.09, 0.0, -0.13, -0.15, 0.04, 0.02, -0.28, 0.17, 0.18, -0.14, 0.08, 0.0, 0.02, -0.14, 0.06, 0.0, -0.38, 0.01, 0.0, -0.38, 0.01, 0.05, 0.14, -0.04, 0.01, 0.38, 0.0, 0.08, 0.14, 0.0, -0.1, -0.04, -0.11, -0.11, -0.15, -0.33, -0.12, -0.16, -0.32, -0.1, 0.11, 0.02, -0.28, 0.17, 0.18, -0.28, 0.18, 0.19, 0.05, 0.14, 0.04, 0.01, 0.38, 0.0, 0.01, 0.38, 0.0, 0.15, -0.04, 0.02, 0.28, -0.17, 0.18, 0.14, -0.08, 0.0, -0.1, -0.04, -0.11, -0.12, -0.17, -0.32, -0.11, -0.08, -0.08, -0.1, 0.11, 0.02, -0.27, 0.18, 0.19, -0.07, 0.14, 0.05, -0.07, -0.11, -0.08, -0.12, -0.17, -0.32, -0.11, -0.18, -0.32, -0.05, 0.11, 0.09, -0.27, 0.18, 0.19, -0.27, 0.18, 0.2, 0.15, -0.04, 0.02, 0.29, -0.15, 0.19, 0.29, -0.16, 0.19, 0.05, 0.14, 0.04, 0.0, 0.38, 0.01, 0.02, 0.14, 0.08, 0.02, -0.14, 0.06, 0.01, -0.38, 0.01, 0.07, -0.14, 0.05, -0.02, 0.14, 0.06, 0.0, 0.38, 0.01, 0.0, 0.38, 0.01, -0.05, 0.11, 0.09, -0.26, 0.17, 0.21, -0.04, 0.08, 0.13, 0.13, 0.0, 0.09, 0.27, -0.15, 0.21, 0.28, -0.15, 0.2, 0.13, 0.04, 0.06, 0.34, 0.17, 0.01, 0.11, 0.08, 0.08, -0.07, -0.11, -0.08, -0.1, -0.18, -0.32, -0.02, -0.14, -0.08, -0.07, 0.04, 0.13, -0.26, 0.17, 0.21, -0.27, 0.16, 0.21, -0.05, -0.14, 0.04, 0.0, -0.38, 0.01, -0.02, -0.14, 0.08, 0.1, 0.11, 0.04, 0.34, 0.17, 0.01, 0.34, 0.18, 0.0, 0.0, -0.11, -0.11, -0.1, -0.18, -0.32, -0.09, -0.18, -0.32, -0.1, -0.11, -0.04, -0.34, -0.17, -0.01, -0.11, -0.08, -0.08, -0.07, 0.04, 0.13, -0.27, 0.15, 0.21, -0.1, 0.0, 0.13, 0.07, -0.04, 0.13, 0.26, -0.17, 0.21, 0.27, -0.16, 0.21, 0.1, 0.11, 0.04, 0.33, 0.18, 0.0, 0.09, 0.14, 0.0, -0.13, -0.04, -0.06, -0.34, -0.17, -0.01, -0.34, -0.16, -0.01, -0.13, 0.0, 0.09, -0.27, 0.15, 0.21, -0.28, 0.15, 0.2, 0.13, 0.0, 0.09, 0.29, -0.15, 0.19, 0.16, 0.0, 0.05, 0.1, 0.11, -0.04, 0.33, 0.18, 0.0, 0.34, 0.18, 0.0, 0.05, -0.11, 0.09, 0.26, -0.17, 0.21, 0.04, -0.08, 0.13, -0.13, -0.04, -0.06, -0.35, -0.15, -0.01, -0.16, 0.0, -0.05, 0.1, 0.11, -0.04, 0.34, 0.17, -0.01, 0.11, 0.08, -0.08, -0.16, 0.0, 0.0, -0.35, -0.15, -0.01, -0.35, -0.15, 0.0, -0.13, 0.0, 0.09, -0.29, 0.15, 0.19, -0.16, 0.0, 0.05, 0.07, -0.04, 0.13, 0.27, -0.15, 0.21, 0.1, 0.0, 0.13, -0.04, 0.08, 0.13, -0.05, 0.11, 0.09, -0.04, 0.08, 0.13, -0.02, 0.14, 0.06, 0.02, 0.14, 0.08, -0.02, 0.14, 0.06, 0.02, -0.14, 0.06, -0.02, -0.14, 0.08, 0.02, -0.14, 0.06, 0.02, 0.14, 0.08, 0.05, 0.14, 0.04, 0.02, 0.14, 0.08, -0.05, 0.11, 0.09, -0.07, 0.14, 0.05, -0.05, 0.11, 0.09, 0.1, -0.11, 0.02, 0.14, -0.08, 0.0, 0.1, -0.11, 0.02, -0.07, -0.11, -0.08, -0.11, -0.08, -0.08, -0.07, -0.11, -0.08, -0.07, 0.14, 0.05, -0.1, 0.11, 0.02, -0.07, 0.14, 0.05, 0.07, -0.14, 0.0, 0.07, -0.14, 0.05, 0.07, -0.14, 0.0, -0.11, -0.08, -0.08, -0.1, -0.04, -0.11, -0.11, -0.08, -0.08, 0.05, 0.14, 0.04, 0.08, 0.14, 0.0, 0.05, 0.14, 0.04, -0.1, 0.11, 0.02, -0.14, 0.08, 0.0, -0.1, 0.11, 0.02, -0.1, -0.04, -0.11, -0.09, 0.0, -0.13, -0.1, -0.04, -0.11, 0.08, 0.14, 0.0, 0.05, 0.14, -0.04, 0.08, 0.14, 0.0, -0.14, 0.08, 0.0, -0.15, 0.04, 0.02, -0.14, 0.08, 0.0, 0.07, -0.14, -0.05, 0.07, -0.14, 0.0, 0.07, -0.14, -0.05, -0.09, 0.0, -0.13, -0.05, 0.0, -0.15, -0.09, 0.0, -0.13, -0.07, 0.04, -0.13, -0.1, 0.0, -0.13, -0.07, 0.04, -0.13, 0.05, 0.14, -0.04, 0.02, 0.14, -0.08, 0.05, 0.14, -0.04, -0.1, 0.0, -0.13, -0.13, 0.0, -0.09, -0.1, 0.0, -0.13, -0.05, 0.0, -0.15, 0.0, 0.0, -0.17, -0.05, 0.0, -0.15, -0.05, -0.14, -0.04, -0.02, -0.14, -0.08, -0.05, -0.14, -0.04, 0.02, 0.14, -0.08, -0.02, 0.14, -0.06, 0.02, 0.14, -0.08, 0.0, 0.0, -0.17, 0.02, -0.04, -0.15, 0.0, 0.0, -0.17, 0.02, -0.14, -0.06, 0.07, -0.14, -0.05, 0.02, -0.14, -0.06, -0.02, 0.14, -0.06, -0.07, 0.14, -0.05, -0.02, 0.14, -0.06, -0.13, 0.0, -0.09, -0.16, 0.0, -0.05, -0.13, 0.0, -0.09, 0.02, -0.04, -0.15, 0.04, -0.08, -0.13, 0.02, -0.04, -0.15, -0.05, -0.14, 0.04, -0.08, -0.14, 0.0, -0.05, -0.14, 0.04, -0.07, 0.14, -0.05, -0.07, 0.14, 0.0, -0.07, 0.14, -0.05, -0.16, 0.0, -0.05, -0.15, 0.04, -0.02, -0.16, 0.0, -0.05, 0.04, -0.08, -0.13, 0.0, -0.11, -0.11, 0.04, -0.08, -0.13, -0.02, -0.14, -0.08, 0.02, -0.14, -0.06, -0.02, -0.14, -0.08, 0.15, -0.04, -0.02, 0.14, -0.08, 0.0, 0.15, -0.04, -0.02, -0.07, 0.14, 0.0, -0.07, 0.14, 0.05, -0.07, 0.14, 0.0, -0.15, 0.04, -0.02, -0.14, 0.08, 0.0, -0.15, 0.04, -0.02, -0.08, -0.14, 0.0, -0.05, -0.14, -0.04, -0.08, -0.14, 0.0, 0.14, -0.08, 0.0, 0.1, -0.11, -0.02, 0.14, -0.08, 0.0, -0.07, 0.14, 0.05, -0.02, 0.14, 0.06, -0.07, 0.14, 0.05, -0.14, 0.08, 0.0, -0.1, 0.11, -0.02, -0.14, 0.08, 0.0, -0.1, 0.11, -0.02, -0.07, 0.14, -0.05, -0.1, 0.11, -0.02, 0.1, -0.11, -0.02, 0.07, -0.14, -0.05, 0.1, -0.11, -0.02, -0.07, 0.14, -0.05, -0.05, 0.11, -0.09, -0.07, 0.14, -0.05, 0.07, -0.14, -0.05, 0.05, -0.11, -0.09, 0.07, -0.14, -0.05, -0.07, -0.11, 0.08, -0.02, -0.14, 0.08, -0.07, -0.11, 0.08, -0.05, 0.11, -0.09, -0.04, 0.08, -0.13, -0.05, 0.11, -0.09, 0.05, -0.11, -0.09, 0.04, -0.08, -0.13, 0.05, -0.11, -0.09, -0.02, -0.14, 0.08, 0.0, -0.11, 0.11, -0.02, -0.14, 0.08, -0.04, 0.08, -0.13, -0.07, 0.04, -0.13, -0.04, 0.08, -0.13, 0.04, -0.08, -0.13, 0.07, -0.04, -0.13, 0.04, -0.08, -0.13, 0.1, 0.04, -0.11, 0.09, 0.0, -0.13, 0.1, 0.04, -0.11, 0.09, 0.0, -0.13, 0.05, 0.0, -0.15, 0.09, 0.0, -0.13, 0.07, -0.04, -0.13, 0.1, 0.0, -0.13, 0.07, -0.04, -0.13, 0.0, -0.11, 0.11, 0.04, -0.08, 0.13, 0.0, -0.11, 0.11, 0.1, 0.0, -0.13, 0.13, 0.0, -0.09, 0.1, 0.0, -0.13, 0.04, -0.08, 0.13, 0.02, -0.04, 0.15, 0.04, -0.08, 0.13, 0.05, 0.0, -0.15, 0.0, 0.0, -0.17, 0.05, 0.0, -0.15, 0.13, 0.0, -0.09, 0.16, 0.0, -0.05, 0.13, 0.0, -0.09, 0.02, -0.04, 0.15, 0.0, 0.0, 0.17, 0.02, -0.04, 0.15, 0.0, 0.0, -0.17, -0.02, 0.04, -0.15, 0.0, 0.0, -0.17, -0.01, -0.38, 0.0, -0.01, -0.38, 0.0, -0.01, -0.38, 0.0, 0.0, -0.38, -0.01, -0.01, -0.38, 0.0, 0.0, -0.38, -0.01, 0.01, -0.38, 0.0, 0.0, -0.38, -0.01, 0.01, -0.38, -0.01, 0.0, -0.38, 0.01, 0.01, -0.38, 0.0, 0.01, -0.38, 0.01, -0.01, -0.38, 0.0, 0.0, -0.38, 0.01, 0.0, -0.38, 0.01, 0.29, -0.16, 0.19, 0.28, -0.18, 0.19, 0.28, -0.17, 0.18, 0.28, -0.15, 0.2, 0.29, -0.16, 0.19, 0.29, -0.15, 0.19, 0.27, -0.16, 0.21, 0.28, -0.15, 0.2, 0.27, -0.15, 0.21, 0.27, -0.18, 0.2, 0.27, -0.16, 0.21, 0.26, -0.17, 0.21, 0.28, -0.18, 0.19, 0.27, -0.18, 0.2, 0.27, -0.18, 0.19, -0.09, -0.18, 0.32, -0.11, -0.18, 0.32, -0.1, -0.18, 0.32, -0.09, -0.16, 0.33, -0.09, -0.18, 0.32, -0.08, -0.17, 0.33, -0.1, -0.15, 0.33, -0.09, -0.16, 0.33, -0.09, -0.15, 0.33, -0.12, -0.16, 0.32, -0.1, -0.15, 0.33, -0.11, -0.15, 0.33, -0.11, -0.18, 0.32, -0.12, -0.16, 0.32, -0.12, -0.17, 0.32, -0.34, -0.18, 0.0, -0.34, -0.18, 0.0, -0.33, -0.18, 0.0, -0.34, -0.16, 0.01, -0.34, -0.18, 0.0, -0.34, -0.17, 0.01, -0.35, -0.15, 0.0, -0.34, -0.16, 0.01, -0.35, -0.15, 0.01, -0.34, -0.16, -0.01, -0.35, -0.15, 0.0, -0.35, -0.15, -0.01, -0.34, -0.18, 0.0, -0.34, -0.16, -0.01, -0.34, -0.17, -0.01, -0.11, -0.18, -0.32, -0.09, -0.18, -0.32, -0.1, -0.18, -0.32, -0.12, -0.16, -0.32, -0.11, -0.18, -0.32, -0.12, -0.17, -0.32, -0.1, -0.15, -0.33, -0.12, -0.16, -0.32, -0.11, -0.15, -0.33, -0.09, -0.16, -0.33, -0.1, -0.15, -0.33, -0.09, -0.15, -0.33, -0.09, -0.18, -0.32, -0.09, -0.16, -0.33, -0.08, -0.17, -0.33, 0.28, -0.18, -0.19, 0.29, -0.16, -0.19, 0.28, -0.17, -0.18, 0.27, -0.18, -0.2, 0.28, -0.18, -0.19, 0.27, -0.18, -0.19, 0.27, -0.16, -0.21, 0.27, -0.18, -0.2, 0.26, -0.17, -0.21, 0.28, -0.15, -0.2, 0.27, -0.16, -0.21, 0.27, -0.15, -0.21, 0.29, -0.16, -0.19, 0.28, -0.15, -0.2, 0.29, -0.15, -0.19, 0.1, 0.15, 0.33, 0.09, 0.16, 0.33, 0.09, 0.15, 0.33, 0.12, 0.16, 0.32, 0.1, 0.15, 0.33, 0.11, 0.15, 0.33, 0.11, 0.18, 0.32, 0.12, 0.16, 0.32, 0.12, 0.17, 0.32, 0.09, 0.18, 0.32, 0.11, 0.18, 0.32, 0.1, 0.18, 0.32, 0.09, 0.16, 0.33, 0.09, 0.18, 0.32, 0.08, 0.17, 0.33, -0.28, 0.15, 0.2, -0.29, 0.16, 0.19, -0.29, 0.15, 0.19, -0.27, 0.16, 0.21, -0.28, 0.15, 0.2, -0.27, 0.15, 0.21, -0.27, 0.18, 0.2, -0.27, 0.16, 0.21, -0.26, 0.17, 0.21, -0.28, 0.18, 0.19, -0.27, 0.18, 0.2, -0.27, 0.18, 0.19, -0.29, 0.16, 0.19, -0.28, 0.18, 0.19, -0.28, 0.17, 0.18, -0.28, 0.15, -0.2, -0.27, 0.16, -0.21, -0.27, 0.15, -0.21, -0.29, 0.16, -0.19, -0.28, 0.15, -0.2, -0.29, 0.15, -0.19, -0.28, 0.18, -0.19, -0.29, 0.16, -0.19, -0.28, 0.17, -0.18, -0.27, 0.18, -0.2, -0.28, 0.18, -0.19, -0.27, 0.18, -0.19, -0.27, 0.16, -0.21, -0.27, 0.18, -0.2, -0.26, 0.17, -0.21, 0.1, 0.15, -0.33, 0.12, 0.16, -0.32, 0.11, 0.15, -0.33, 0.09, 0.16, -0.33, 0.1, 0.15, -0.33, 0.09, 0.15, -0.33, 0.09, 0.18, -0.32, 0.09, 0.16, -0.33, 0.08, 0.17, -0.33, 0.11, 0.18, -0.32, 0.09, 0.18, -0.32, 0.1, 0.18, -0.32, 0.12, 0.16, -0.32, 0.11, 0.18, -0.32, 0.12, 0.17, -0.32, 0.35, 0.15, 0.0, 0.34, 0.16, 0.01, 0.35, 0.15, 0.01, 0.34, 0.16, -0.01, 0.35, 0.15, 0.0, 0.35, 0.15, -0.01, 0.34, 0.18, 0.0, 0.34, 0.16, -0.01, 0.34, 0.17, -0.01, 0.34, 0.18, 0.0, 0.34, 0.18, 0.0, 0.33, 0.18, 0.0, 0.34, 0.16, 0.01, 0.34, 0.18, 0.0, 0.34, 0.17, 0.01, 0.01, 0.38, 0.0, 0.0, 0.38, 0.01, 0.0, 0.38, 0.01, 0.01, 0.38, 0.0, 0.01, 0.38, 0.0, 0.01, 0.38, 0.0, 0.0, 0.38, -0.01, 0.01, 0.38, 0.0, 0.0, 0.38, -0.01, -0.01, 0.38, 0.0, 0.0, 0.38, -0.01, -0.01, 0.38, -0.01, 0.0, 0.38, 0.01, -0.01, 0.38, 0.0, -0.01, 0.38, 0.01, -0.1, 0.11, -0.02, -0.28, 0.17, -0.18, -0.14, 0.08, 0.0, -0.05, -0.14, 0.04, -0.01, -0.38, 0.0, -0.01, -0.38, 0.0, 0.02, -0.14, -0.06, 0.0, -0.38, -0.01, -0.02, -0.14, -0.08, -0.1, 0.11, -0.02, -0.27, 0.18, -0.19, -0.28, 0.18, -0.19, 0.1, -0.11, -0.02, 0.27, -0.18, -0.19, 0.28, -0.18, -0.19, -0.05, 0.11, -0.09, -0.27, 0.18, -0.19, -0.07, 0.14, -0.05, 0.05, -0.11, -0.09, 0.27, -0.18, -0.19, 0.07, -0.14, -0.05, -0.05, -0.14, -0.04, -0.01, -0.38, 0.0, -0.08, -0.14, 0.0, -0.07, -0.11, 0.08, -0.1, -0.18, 0.32, -0.11, -0.18, 0.32, -0.05, 0.11, -0.09, -0.26, 0.17, -0.21, -0.27, 0.18, -0.2, 0.05, -0.11, -0.09, 0.26, -0.17, -0.21, 0.27, -0.18, -0.2, 0.0, -0.11, 0.11, -0.1, -0.18, 0.32, -0.02, -0.14, 0.08, -0.07, 0.04, -0.13, -0.26, 0.17, -0.21, -0.04, 0.08, -0.13, 0.07, -0.04, -0.13, 0.26, -0.17, -0.21, 0.04, -0.08, -0.13, 0.1, 0.04, -0.11, 0.11, 0.15, -0.33, 0.12, 0.16, -0.32, 0.05, 0.0, -0.15, 0.11, 0.15, -0.33, 0.09, 0.0, -0.13, 0.07, -0.04, -0.13, 0.27, -0.15, -0.21, 0.27, -0.16, -0.21, 0.0, -0.11, 0.11, -0.08, -0.17, 0.33, -0.09, -0.18, 0.32, 0.13, 0.0, -0.09, 0.27, -0.15, -0.21, 0.1, 0.0, -0.13, 0.02, -0.04, 0.15, -0.08, -0.17, 0.33, 0.04, -0.08, 0.13, 0.05, 0.0, -0.15, 0.09, 0.15, -0.33, 0.1, 0.15, -0.33, 0.13, 0.0, -0.09, 0.29, -0.15, -0.19, 0.28, -0.15, -0.2, 0.02, -0.04, 0.15, -0.09, -0.15, 0.33, -0.09, -0.16, 0.33, -0.02, 0.04, -0.15, 0.09, 0.15, -0.33, 0.0, 0.0, -0.17, 0.15, -0.04, -0.02, 0.29, -0.15, -0.19, 0.16, 0.0, -0.05, -0.05, 0.0, 0.15, -0.09, -0.15, 0.33, 0.0, 0.0, 0.17, -0.02, 0.04, 0.15, 0.09, 0.15, 0.33, 0.09, 0.16, 0.33, -0.02, 0.04, -0.15, 0.08, 0.17, -0.33, 0.09, 0.16, -0.33, 0.05, 0.0, 0.15, 0.09, 0.15, 0.33, 0.0, 0.0, 0.17, -0.05, 0.0, 0.15, -0.11, -0.15, 0.33, -0.1, -0.15, 0.33, 0.0, 0.11, -0.11, 0.08, 0.17, -0.33, -0.04, 0.08, -0.13, -0.1, -0.04, 0.11, -0.11, -0.15, 0.33, -0.09, 0.0, 0.13, 0.0, 0.11, -0.11, 0.1, 0.18, -0.32, 0.09, 0.18, -0.32, 0.05, 0.0, 0.15, 0.11, 0.15, 0.33, 0.1, 0.15, 0.33, -0.1, -0.04, 0.11, -0.12, -0.17, 0.32, -0.12, -0.16, 0.32, 0.07, 0.11, -0.08, 0.1, 0.18, -0.32, 0.02, 0.14, -0.08, 0.1, 0.04, 0.11, 0.11, 0.15, 0.33, 0.09, 0.0, 0.13, -0.07, -0.11, 0.08, -0.12, -0.17, 0.32, -0.11, -0.08, 0.08, -0.1, -0.11, -0.04, -0.33, -0.18, 0.0, -0.34, -0.18, 0.0, 0.07, 0.11, -0.08, 0.12, 0.17, -0.32, 0.11, 0.18, -0.32, 0.1, 0.04, 0.11, 0.12, 0.17, 0.32, 0.12, 0.16, 0.32, -0.1, -0.11, 0.04, -0.33, -0.18, 0.0, -0.09, -0.14, 0.0, 0.1, 0.04, -0.11, 0.12, 0.17, -0.32, 0.11, 0.08, -0.08, 0.07, 0.11, 0.08, 0.12, 0.17, 0.32, 0.11, 0.08, 0.08, 0.13, 0.04, 0.06, 0.35, 0.15, 0.01, 0.34, 0.16, 0.01, 0.16, 0.0, 0.0, 0.35, 0.15, 0.01, 0.16, 0.0, 0.05, 0.07, 0.11, 0.08, 0.1, 0.18, 0.32, 0.11, 0.18, 0.32, -0.1, -0.11, 0.04, -0.34, -0.17, 0.01, -0.34, -0.18, 0.0, 0.0, 0.11, 0.11, 0.1, 0.18, 0.32, 0.02, 0.14, 0.08, -0.13, -0.04, 0.06, -0.34, -0.17, 0.01, -0.11, -0.08, 0.08, 0.16, 0.0, 0.0, 0.35, 0.15, -0.01, 0.35, 0.15, 0.0, 0.1, -0.11, 0.02, 0.27, -0.18, 0.19, 0.07, -0.14, 0.05, 0.0, 0.11, 0.11, 0.08, 0.17, 0.33, 0.09, 0.18, 0.32, -0.13, -0.04, 0.06, -0.35, -0.15, 0.01, -0.34, -0.16, 0.01, 0.13, 0.04, -0.06, 0.35, 0.15, -0.01, 0.16, 0.0, -0.05, 0.05, -0.11, 0.09, 0.27, -0.18, 0.19, 0.27, -0.18, 0.2, -0.02, 0.04, 0.15, 0.08, 0.17, 0.33, -0.04, 0.08, 0.13, -0.16, 0.0, 0.0, -0.35, -0.15, 0.01, -0.16, 0.0, 0.05, -0.15, 0.04, 0.02, -0.29, 0.15, 0.19, -0.29, 0.16, 0.19, 0.13, 0.04, -0.06, 0.34, 0.17, -0.01, 0.34, 0.16, -0.01, 0.14, -0.08, 0.0, 0.14, -0.08, 0.0, 0.1, -0.11, 0.02, 0.1, -0.11, 0.02, 0.07, -0.14, 0.05, 0.07, -0.14, 0.0, 0.07, -0.14, 0.05, 0.07, -0.14, 0.05, 0.07, -0.14, 0.0, 0.07, -0.14, 0.0, 0.07, -0.14, -0.05, 0.07, -0.14, -0.05, 0.1, -0.11, -0.02, 0.14, -0.08, 0.0, 0.1, -0.11, 0.02, 0.07, -0.14, 0.0, 0.07, -0.14, -0.05, 0.1, -0.11, -0.02, -0.02, -0.14, -0.08, -0.02, -0.14, -0.08, -0.05, -0.14, -0.04, -0.05, -0.14, -0.04, -0.08, -0.14, 0.0, -0.1, -0.11, -0.04, -0.08, -0.14, 0.0, -0.09, -0.14, 0.0, -0.1, -0.11, -0.04, -0.1, -0.11, -0.04, -0.11, -0.08, -0.08, -0.11, -0.08, -0.08, -0.07, -0.11, -0.08, -0.02, -0.14, -0.08, -0.05, -0.14, -0.04, -0.1, -0.11, -0.04, -0.11, -0.08, -0.08, -0.07, -0.11, -0.08, -0.02, -0.14, 0.08, -0.02, -0.14, 0.08, 0.02, -0.14, 0.06, 0.02, -0.14, 0.06, 0.07, -0.14, 0.05, 0.07, -0.14, 0.05, 0.07, -0.14, 0.05, 0.05, -0.11, 0.09, 0.02, -0.14, 0.06, 0.05, -0.11, 0.09, 0.04, -0.08, 0.13, 0.0, -0.11, 0.11, 0.02, -0.14, 0.06, 0.05, -0.11, 0.09, 0.0, -0.11, 0.11, 0.04, -0.08, 0.13, 0.04, -0.08, 0.13, 0.0, -0.11, 0.11, 0.07, -0.14, -0.05, 0.07, -0.14, -0.05, 0.02, -0.14, -0.06, 0.02, -0.14, -0.06, -0.02, -0.14, -0.08, -0.02, -0.14, -0.08, -0.02, -0.14, -0.08, 0.0, -0.11, -0.11, 0.02, -0.14, -0.06, 0.0, -0.11, -0.11, 0.04, -0.08, -0.13, 0.05, -0.11, -0.09, 0.02, -0.14, -0.06, 0.0, -0.11, -0.11, 0.05, -0.11, -0.09, 0.04, -0.08, -0.13, 0.04, -0.08, -0.13, 0.05, -0.11, -0.09, 0.0, 0.0, 0.17, 0.0, 0.0, 0.17, 0.05, 0.0, 0.15, 0.0, 0.0, 0.17, 0.02, -0.04, 0.15, 0.05, 0.0, 0.15, 0.02, -0.04, 0.15, 0.04, -0.08, 0.13, 0.04, -0.08, 0.13, 0.04, -0.08, 0.13, 0.07, -0.04, 0.13, 0.02, -0.04, 0.15, 0.07, -0.04, 0.13, 0.1, 0.0, 0.13, 0.05, 0.0, 0.15, 0.02, -0.04, 0.15, 0.07, -0.04, 0.13, 0.05, 0.0, 0.15, 0.09, 0.0, 0.13, 0.1, 0.0, 0.13, 0.13, 0.0, 0.09, 0.13, 0.0, 0.09, 0.16, 0.0, 0.05, 0.16, 0.0, 0.05, 0.13, 0.04, 0.06, 0.11, 0.08, 0.08, 0.1, 0.04, 0.11, 0.11, 0.08, 0.08, 0.11, 0.08, 0.08, 0.1, 0.04, 0.11, 0.13, 0.0, 0.09, 0.16, 0.0, 0.05, 0.13, 0.04, 0.06, 0.1, 0.04, 0.11, 0.09, 0.0, 0.13, 0.13, 0.0, 0.09, 0.16, 0.0, 0.05, 0.16, 0.0, 0.05, 0.16, 0.0, 0.0, 0.16, 0.0, 0.05, 0.15, -0.04, 0.02, 0.16, 0.0, 0.0, 0.15, -0.04, 0.02, 0.14, -0.08, 0.0, 0.14, -0.08, 0.0, 0.14, -0.08, 0.0, 0.15, -0.04, -0.02, 0.15, -0.04, 0.02, 0.15, -0.04, -0.02, 0.16, 0.0, -0.05, 0.16, 0.0, 0.0, 0.15, -0.04, 0.02, 0.15, -0.04, -0.02, 0.16, 0.0, 0.0, -0.1, 0.0, 0.13, -0.09, 0.0, 0.13, -0.05, 0.0, 0.15, -0.05, 0.0, 0.15, 0.0, 0.0, 0.17, 0.0, 0.0, 0.17, -0.02, 0.04, 0.15, -0.04, 0.08, 0.13, -0.07, 0.04, 0.13, -0.04, 0.08, 0.13, -0.04, 0.08, 0.13, -0.07, 0.04, 0.13, -0.05, 0.0, 0.15, 0.0, 0.0, 0.17, -0.02, 0.04, 0.15, -0.07, 0.04, 0.13, -0.1, 0.0, 0.13, -0.05, 0.0, 0.15, -0.16, 0.0, -0.05, -0.16, 0.0, -0.05, -0.16, 0.0, 0.0, -0.16, 0.0, 0.0, -0.16, 0.0, 0.05, -0.16, 0.0, 0.05, -0.15, 0.04, 0.02, -0.14, 0.08, 0.0, -0.14, 0.08, 0.0, -0.16, 0.0, 0.0, -0.16, 0.0, 0.05, -0.15, 0.04, 0.02, -0.15, 0.04, -0.02, -0.16, 0.0, -0.05, -0.16, 0.0, 0.0, -0.15, 0.04, 0.02, -0.14, 0.08, 0.0, -0.15, 0.04, -0.02, 0.0, 0.0, -0.17, 0.0, 0.0, -0.17, -0.05, 0.0, -0.15, -0.05, 0.0, -0.15, -0.09, 0.0, -0.13, -0.1, 0.0, -0.13, -0.1, 0.0, -0.13, -0.07, 0.04, -0.13, -0.05, 0.0, -0.15, -0.07, 0.04, -0.13, -0.04, 0.08, -0.13, -0.02, 0.04, -0.15, -0.05, 0.0, -0.15, -0.07, 0.04, -0.13, -0.02, 0.04, -0.15, -0.04, 0.08, -0.13, -0.04, 0.08, -0.13, -0.02, 0.04, -0.15, -0.16, 0.0, 0.05, -0.16, 0.0, 0.05, -0.13, 0.0, 0.09, -0.16, 0.0, 0.05, -0.13, -0.04, 0.06, -0.13, 0.0, 0.09, -0.13, -0.04, 0.06, -0.11, -0.08, 0.08, -0.11, -0.08, 0.08, -0.11, -0.08, 0.08, -0.1, -0.04, 0.11, -0.13, -0.04, 0.06, -0.1, -0.04, 0.11, -0.09, 0.0, 0.13, -0.13, 0.0, 0.09, -0.13, -0.04, 0.06, -0.1, -0.04, 0.11, -0.13, 0.0, 0.09, -0.1, 0.0, -0.13, -0.09, 0.0, -0.13, -0.13, 0.0, -0.09, -0.09, 0.0, -0.13, -0.1, -0.04, -0.11, -0.13, 0.0, -0.09, -0.1, -0.04, -0.11, -0.11, -0.08, -0.08, -0.11, -0.08, -0.08, -0.13, -0.04, -0.06, -0.16, 0.0, -0.05, -0.13, 0.0, -0.09, -0.16, 0.0, -0.05, -0.16, 0.0, -0.05, -0.13, 0.0, -0.09, -0.1, -0.04, -0.11, -0.11, -0.08, -0.08, -0.13, -0.04, -0.06, 0.09, 0.0, -0.13, 0.1, 0.0, -0.13, 0.05, 0.0, -0.15, 0.1, 0.0, -0.13, 0.07, -0.04, -0.13, 0.05, 0.0, -0.15, 0.07, -0.04, -0.13, 0.04, -0.08, -0.13, 0.04, -0.08, -0.13, 0.02, -0.04, -0.15, 0.0, 0.0, -0.17, 0.05, 0.0, -0.15, 0.0, 0.0, -0.17, 0.0, 0.0, -0.17, 0.05, 0.0, -0.15, 0.07, -0.04, -0.13, 0.04, -0.08, -0.13, 0.02, -0.04, -0.15, 0.16, 0.0, -0.05, 0.16, 0.0, -0.05, 0.13, 0.0, -0.09, 0.13, 0.0, -0.09, 0.1, 0.0, -0.13, 0.09, 0.0, -0.13, 0.09, 0.0, -0.13, 0.1, 0.04, -0.11, 0.13, 0.0, -0.09, 0.1, 0.04, -0.11, 0.11, 0.08, -0.08, 0.13, 0.04, -0.06, 0.13, 0.0, -0.09, 0.1, 0.04, -0.11, 0.13, 0.04, -0.06, 0.11, 0.08, -0.08, 0.11, 0.08, -0.08, 0.13, 0.04, -0.06, 0.02, 0.14, 0.08, 0.02, 0.14, 0.08, 0.05, 0.14, 0.04, 0.02, 0.14, 0.08, 0.07, 0.11, 0.08, 0.05, 0.14, 0.04, 0.07, 0.11, 0.08, 0.11, 0.08, 0.08, 0.1, 0.11, 0.04, 0.11, 0.08, 0.08, 0.11, 0.08, 0.08, 0.1, 0.11, 0.04, 0.1, 0.11, 0.04, 0.09, 0.14, 0.0, 0.08, 0.14, 0.0, 0.1, 0.11, 0.04, 0.08, 0.14, 0.0, 0.05, 0.14, 0.04, -0.07, 0.14, 0.05, -0.07, 0.14, 0.05, -0.02, 0.14, 0.06, -0.07, 0.14, 0.05, -0.05, 0.11, 0.09, -0.02, 0.14, 0.06, -0.05, 0.11, 0.09, -0.04, 0.08, 0.13, -0.04, 0.08, 0.13, 0.0, 0.11, 0.11, 0.02, 0.14, 0.08, -0.02, 0.14, 0.06, 0.02, 0.14, 0.08, 0.02, 0.14, 0.08, -0.02, 0.14, 0.06, -0.05, 0.11, 0.09, -0.04, 0.08, 0.13, 0.0, 0.11, 0.11, -0.07, 0.14, -0.05, -0.07, 0.14, -0.05, -0.07, 0.14, 0.0, -0.07, 0.14, -0.05, -0.1, 0.11, -0.02, -0.07, 0.14, 0.0, -0.1, 0.11, -0.02, -0.14, 0.08, 0.0, -0.14, 0.08, 0.0, -0.1, 0.11, 0.02, -0.07, 0.14, 0.05, -0.07, 0.14, 0.0, -0.07, 0.14, 0.05, -0.07, 0.14, 0.05, -0.07, 0.14, 0.0, -0.1, 0.11, -0.02, -0.14, 0.08, 0.0, -0.1, 0.11, 0.02, 0.02, 0.14, -0.08, 0.02, 0.14, -0.08, -0.02, 0.14, -0.06, 0.02, 0.14, -0.08, 0.0, 0.11, -0.11, -0.02, 0.14, -0.06, 0.0, 0.11, -0.11, -0.04, 0.08, -0.13, -0.04, 0.08, -0.13, -0.05, 0.11, -0.09, -0.07, 0.14, -0.05, -0.02, 0.14, -0.06, -0.07, 0.14, -0.05, -0.07, 0.14, -0.05, -0.02, 0.14, -0.06, 0.0, 0.11, -0.11, -0.04, 0.08, -0.13, -0.05, 0.11, -0.09, 0.08, 0.14, 0.0, 0.09, 0.14, 0.0, 0.1, 0.11, -0.04, 0.1, 0.11, -0.04, 0.11, 0.08, -0.08, 0.11, 0.08, -0.08, 0.07, 0.11, -0.08, 0.02, 0.14, -0.08, 0.05, 0.14, -0.04, 0.02, 0.14, -0.08, 0.02, 0.14, -0.08, 0.05, 0.14, -0.04, 0.1, 0.11, -0.04, 0.11, 0.08, -0.08, 0.07, 0.11, -0.08, 0.05, 0.14, -0.04, 0.08, 0.14, 0.0, 0.1, 0.11, -0.04, 0.11, 0.08, 0.08, 0.13, 0.04, 0.06, 0.13, 0.04, 0.06, 0.02, -0.04, 0.15, 0.0, 0.0, 0.17, 0.0, 0.0, 0.17, 0.13, 0.0, -0.09, 0.16, 0.0, -0.05, 0.16, 0.0, -0.05, 0.05, 0.0, -0.15, 0.0, 0.0, -0.17, 0.0, 0.0, -0.17, 0.04, -0.08, 0.13, 0.02, -0.04, 0.15, 0.02, -0.04, 0.15, 0.1, 0.0, -0.13, 0.13, 0.0, -0.09, 0.13, 0.0, -0.09, 0.0, -0.11, 0.11, 0.04, -0.08, 0.13, 0.04, -0.08, 0.13, 0.07, -0.04, -0.13, 0.1, 0.0, -0.13, 0.1, 0.0, -0.13, 0.09, 0.0, -0.13, 0.05, 0.0, -0.15, 0.05, 0.0, -0.15, 0.1, 0.04, -0.11, 0.09, 0.0, -0.13, 0.09, 0.0, -0.13, 0.04, -0.08, -0.13, 0.07, -0.04, -0.13, 0.07, -0.04, -0.13, -0.04, 0.08, -0.13, -0.07, 0.04, -0.13, -0.07, 0.04, -0.13, -0.02, -0.14, 0.08, 0.0, -0.11, 0.11, 0.0, -0.11, 0.11, 0.05, -0.11, -0.09, 0.04, -0.08, -0.13, 0.04, -0.08, -0.13, -0.05, 0.11, -0.09, -0.04, 0.08, -0.13, -0.04, 0.08, -0.13, -0.07, -0.11, 0.08, -0.02, -0.14, 0.08, -0.02, -0.14, 0.08, 0.07, -0.14, 0.05, 0.1, -0.11, 0.02, 0.1, -0.11, 0.02, 0.07, -0.14, -0.05, 0.05, -0.11, -0.09, 0.05, -0.11, -0.09, -0.07, 0.14, -0.05, -0.05, 0.11, -0.09, -0.05, 0.11, -0.09, 0.05, -0.11, 0.09, 0.07, -0.14, 0.05, 0.07, -0.14, 0.05, 0.1, -0.11, -0.02, 0.07, -0.14, -0.05, 0.07, -0.14, -0.05, -0.1, 0.11, -0.02, -0.07, 0.14, -0.05, -0.07, 0.14, -0.05, 0.04, -0.08, 0.13, 0.05, -0.11, 0.09, 0.05, -0.11, 0.09, -0.14, 0.08, 0.0, -0.1, 0.11, -0.02, -0.1, 0.11, -0.02, 0.07, -0.04, 0.13, 0.04, -0.08, 0.13, 0.04, -0.08, 0.13, -0.07, 0.14, 0.05, -0.02, 0.14, 0.06, -0.02, 0.14, 0.06, 0.14, -0.08, 0.0, 0.1, -0.11, -0.02, 0.1, -0.11, -0.02, -0.15, 0.04, -0.02, -0.14, 0.08, 0.0, -0.14, 0.08, 0.0, -0.07, 0.14, 0.0, -0.07, 0.14, 0.05, -0.07, 0.14, 0.05, 0.15, -0.04, -0.02, 0.14, -0.08, 0.0, 0.14, -0.08, 0.0, 0.1, 0.0, 0.13, 0.07, -0.04, 0.13, 0.07, -0.04, 0.13, 0.04, -0.08, -0.13, 0.0, -0.11, -0.11, 0.0, -0.11, -0.11, -0.16, 0.0, -0.05, -0.15, 0.04, -0.02, -0.15, 0.04, -0.02, 0.13, 0.0, 0.09, 0.1, 0.0, 0.13, 0.1, 0.0, 0.13, -0.07, 0.14, -0.05, -0.07, 0.14, 0.0, -0.07, 0.14, 0.0, 0.02, -0.04, -0.15, 0.04, -0.08, -0.13, 0.04, -0.08, -0.13, -0.13, 0.0, -0.09, -0.16, 0.0, -0.05, -0.16, 0.0, -0.05, -0.02, 0.14, -0.06, -0.07, 0.14, -0.05, -0.07, 0.14, -0.05, 0.16, 0.0, 0.05, 0.13, 0.0, 0.09, 0.13, 0.0, 0.09, 0.0, 0.0, -0.17, 0.02, -0.04, -0.15, 0.02, -0.04, -0.15, 0.15, -0.04, 0.02, 0.16, 0.0, 0.05, 0.16, 0.0, 0.05, 0.02, 0.14, -0.08, -0.02, 0.14, -0.06, -0.02, 0.14, -0.06, -0.05, 0.0, -0.15, 0.0, 0.0, -0.17, 0.0, 0.0, -0.17, -0.1, 0.0, -0.13, -0.13, 0.0, -0.09, -0.13, 0.0, -0.09, 0.05, 0.14, -0.04, 0.02, 0.14, -0.08, 0.02, 0.14, -0.08, -0.07, 0.04, -0.13, -0.1, 0.0, -0.13, -0.1, 0.0, -0.13, -0.09, 0.0, -0.13, -0.05, 0.0, -0.15, -0.05, 0.0, -0.15, -0.14, 0.08, 0.0, -0.15, 0.04, 0.02, -0.15, 0.04, 0.02, 0.14, -0.08, 0.0, 0.15, -0.04, 0.02, 0.15, -0.04, 0.02, 0.08, 0.14, 0.0, 0.05, 0.14, -0.04, 0.05, 0.14, -0.04, -0.1, -0.04, -0.11, -0.09, 0.0, -0.13, -0.09, 0.0, -0.13, -0.1, 0.11, 0.02, -0.14, 0.08, 0.0, -0.14, 0.08, 0.0, 0.1, -0.11, 0.02, 0.14, -0.08, 0.0, 0.14, -0.08, 0.0, 0.05, 0.14, 0.04, 0.08, 0.14, 0.0, 0.08, 0.14, 0.0, -0.02, -0.14, 0.08, -0.05, -0.14, 0.04, -0.05, -0.14, 0.04, -0.11, -0.08, -0.08, -0.1, -0.04, -0.11, -0.1, -0.04, -0.11, -0.07, 0.14, 0.05, -0.1, 0.11, 0.02, -0.1, 0.11, 0.02, 0.02, -0.14, 0.06, -0.02, -0.14, 0.08, -0.02, -0.14, 0.08, -0.07, -0.11, -0.08, -0.11, -0.08, -0.08, -0.11, -0.08, -0.08, -0.05, 0.11, 0.09, -0.07, 0.14, 0.05, -0.07, 0.14, 0.05, 0.02, 0.14, 0.08, 0.05, 0.14, 0.04, 0.05, 0.14, 0.04, -0.09, -0.14, 0.0, -0.08, -0.14, 0.0, -0.1, -0.11, 0.04, -0.08, -0.14, 0.0, -0.05, -0.14, 0.04, -0.1, -0.11, 0.04, -0.05, -0.14, 0.04, -0.02, -0.14, 0.08, -0.02, -0.14, 0.08, -0.02, -0.14, 0.08, -0.07, -0.11, 0.08, -0.05, -0.14, 0.04, -0.07, -0.11, 0.08, -0.11, -0.08, 0.08, -0.1, -0.11, 0.04, -0.05, -0.14, 0.04, -0.07, -0.11, 0.08, -0.1, -0.11, 0.04, -0.02, -0.14, -0.08, -0.07, -0.11, -0.08, -0.07, -0.11, -0.08, 0.14, -0.08, 0.0, 0.15, -0.04, 0.02, 0.15, -0.04, 0.02, -0.07, 0.04, 0.13, -0.04, 0.08, 0.13, -0.04, 0.08, 0.13, 0.1, 0.11, 0.04, 0.11, 0.08, 0.08, 0.11, 0.08, 0.08, 0.0, -0.11, -0.11, -0.02, -0.14, -0.08, -0.02, -0.14, -0.08, -0.11, -0.08, -0.08, -0.1, -0.11, -0.04, -0.1, -0.11, -0.04, 0.15, -0.04, 0.02, 0.16, 0.0, 0.05, 0.16, 0.0, 0.05, -0.1, 0.0, 0.13, -0.07, 0.04, 0.13, -0.07, 0.04, 0.13, 0.09, 0.14, 0.0, 0.1, 0.11, 0.04, 0.1, 0.11, 0.04, -0.13, -0.04, -0.06, -0.11, -0.08, -0.08, -0.11, -0.08, -0.08, 0.07, -0.14, 0.05, 0.02, -0.14, 0.06, 0.02, -0.14, 0.06, -0.13, 0.0, 0.09, -0.1, 0.0, 0.13, -0.1, 0.0, 0.13, 0.1, 0.11, -0.04, 0.09, 0.14, 0.0, 0.09, 0.14, 0.0, 0.13, 0.0, 0.09, 0.1, 0.0, 0.13, 0.1, 0.0, 0.13, -0.16, 0.0, -0.05, -0.13, -0.04, -0.06, -0.13, -0.04, -0.06, -0.02, -0.14, 0.08, -0.05, -0.14, 0.04, -0.05, -0.14, 0.04, 0.11, 0.08, -0.08, 0.1, 0.11, -0.04, 0.1, 0.11, -0.04, -0.16, 0.0, 0.0, -0.16, 0.0, -0.05, -0.16, 0.0, -0.05, -0.16, 0.0, 0.05, -0.13, 0.0, 0.09, -0.13, 0.0, 0.09, 0.13, 0.04, -0.06, 0.11, 0.08, -0.08, 0.11, 0.08, -0.08, 0.07, -0.04, 0.13, 0.04, -0.08, 0.13, 0.04, -0.08, 0.13, -0.15, 0.04, 0.02, -0.16, 0.0, 0.05, -0.16, 0.0, 0.05, -0.16, 0.0, 0.05, -0.16, 0.0, 0.0, -0.16, 0.0, 0.0, 0.16, 0.0, 0.05, 0.13, 0.0, 0.09, 0.13, 0.0, 0.09, -0.04, 0.08, 0.13, -0.02, 0.04, 0.15, -0.02, 0.04, 0.15, 0.16, 0.0, -0.05, 0.13, 0.04, -0.06, 0.13, 0.04, -0.06, -0.13, -0.04, 0.06, -0.16, 0.0, 0.05, -0.16, 0.0, 0.05, 0.04, -0.08, 0.13, 0.05, -0.11, 0.09, 0.05, -0.11, 0.09, 0.0, 0.11, 0.11, -0.04, 0.08, 0.13, -0.04, 0.08, 0.13, 0.16, 0.0, 0.0, 0.16, 0.0, -0.05, 0.16, 0.0, -0.05, -0.11, -0.08, 0.08, -0.13, -0.04, 0.06, -0.13, -0.04, 0.06, 0.1, 0.0, 0.13, 0.07, -0.04, 0.13, 0.07, -0.04, 0.13, 0.02, 0.14, 0.08, 0.0, 0.11, 0.11, 0.0, 0.11, 0.11, -0.1, -0.11, 0.04, -0.11, -0.08, 0.08, -0.11, -0.08, 0.08, 0.07, 0.11, 0.08, 0.02, 0.14, 0.08, 0.02, 0.14, 0.08, 0.16, 0.0, 0.05, 0.16, 0.0, 0.0, 0.16, 0.0, 0.0, 0.05, -0.11, 0.09, 0.07, -0.14, 0.05, 0.07, -0.14, 0.05, 0.13, 0.04, 0.06, 0.16, 0.0, 0.05, 0.16, 0.0, 0.05, 0.07, -0.14, 0.05, 0.1, -0.11, 0.02, 0.1, -0.11, 0.02, 0.11, 0.08, 0.08, 0.07, 0.11, 0.08, 0.07, 0.11, 0.08, 0.11, 0.08, -0.08, 0.1, 0.04, -0.11, 0.1, 0.04, -0.11, -0.09, -0.14, 0.0, -0.1, -0.11, 0.04, -0.1, -0.11, 0.04, 0.1, 0.04, 0.11, 0.11, 0.08, 0.08, 0.11, 0.08, 0.08, 0.07, 0.11, -0.08, 0.11, 0.08, -0.08, 0.11, 0.08, -0.08, -0.1, -0.11, -0.04, -0.09, -0.14, 0.0, -0.09, -0.14, 0.0, -0.11, -0.08, 0.08, -0.07, -0.11, 0.08, -0.07, -0.11, 0.08, 0.09, 0.0, 0.13, 0.1, 0.04, 0.11, 0.1, 0.04, 0.11, 0.02, 0.14, -0.08, 0.07, 0.11, -0.08, 0.07, 0.11, -0.08, -0.1, -0.04, 0.11, -0.11, -0.08, 0.08, -0.11, -0.08, 0.08, 0.05, 0.0, 0.15, 0.09, 0.0, 0.13, 0.09, 0.0, 0.13, 0.0, 0.11, -0.11, 0.02, 0.14, -0.08, 0.02, 0.14, -0.08, -0.09, 0.0, 0.13, -0.1, -0.04, 0.11, -0.1, -0.04, 0.11, -0.04, 0.08, -0.13, 0.0, 0.11, -0.11, 0.0, 0.11, -0.11, -0.05, 0.0, 0.15, -0.09, 0.0, 0.13, -0.09, 0.0, 0.13, 0.0, 0.0, 0.17, 0.05, 0.0, 0.15, 0.05, 0.0, 0.15, -0.02, 0.04, -0.15, -0.04, 0.08, -0.13, -0.04, 0.08, -0.13, -0.02, 0.04, 0.15, 0.0, 0.0, 0.17, 0.0, 0.0, 0.17, 0.0, 0.0, 0.17, -0.05, 0.0, 0.15, -0.05, 0.0, 0.15, 0.16, 0.0, -0.05, 0.15, -0.04, -0.02, 0.15, -0.04, -0.02, 0.0, 0.0, -0.17, -0.02, 0.04, -0.15, -0.02, 0.04, -0.15, 0.16, 0.0, -0.05, 0.15, -0.04, -0.02, 0.15, -0.04, -0.02, 0.0, 0.0, 0.17, -0.05, 0.0, 0.15, -0.05, 0.0, 0.15, -0.02, 0.04, 0.15, 0.0, 0.0, 0.17, 0.0, 0.0, 0.17, -0.02, 0.04, -0.15, -0.04, 0.08, -0.13, -0.04, 0.08, -0.13, 0.0, 0.0, 0.17, 0.05, 0.0, 0.15, 0.05, 0.0, 0.15, -0.05, 0.0, 0.15, -0.09, 0.0, 0.13, -0.09, 0.0, 0.13, -0.04, 0.08, -0.13, 0.0, 0.11, -0.11, 0.0, 0.11, -0.11, -0.09, 0.0, 0.13, -0.1, -0.04, 0.11, -0.1, -0.04, 0.11, 0.0, 0.11, -0.11, 0.02, 0.14, -0.08, 0.02, 0.14, -0.08, 0.05, 0.0, 0.15, 0.09, 0.0, 0.13, 0.09, 0.0, 0.13, -0.1, -0.04, 0.11, -0.11, -0.08, 0.08, -0.11, -0.08, 0.08, 0.02, 0.14, -0.08, 0.07, 0.11, -0.08, 0.07, 0.11, -0.08, 0.09, 0.0, 0.13, 0.1, 0.04, 0.11, 0.1, 0.04, 0.11, -0.11, -0.08, 0.08, -0.07, -0.11, 0.08, -0.07, -0.11, 0.08, -0.1, -0.11, -0.04, -0.09, -0.14, 0.0, -0.09, -0.14, 0.0, 0.07, 0.11, -0.08, 0.11, 0.08, -0.08, 0.11, 0.08, -0.08, 0.1, 0.04, 0.11, 0.11, 0.08, 0.08, 0.11, 0.08, 0.08, -0.09, -0.14, 0.0, -0.1, -0.11, 0.04, -0.1, -0.11, 0.04, 0.11, 0.08, -0.08, 0.1, 0.04, -0.11, 0.1, 0.04, -0.11, 0.11, 0.08, 0.08, 0.07, 0.11, 0.08, 0.07, 0.11, 0.08, 0.13, 0.04, 0.06, 0.16, 0.0, 0.05, 0.16, 0.0, 0.05, 0.16, 0.0, 0.05, 0.16, 0.0, 0.0, 0.16, 0.0, 0.0, 0.07, 0.11, 0.08, 0.02, 0.14, 0.08, 0.02, 0.14, 0.08, -0.1, -0.11, 0.04, -0.11, -0.08, 0.08, -0.11, -0.08, 0.08, 0.02, 0.14, 0.08, 0.0, 0.11, 0.11, 0.0, 0.11, 0.11, -0.11, -0.08, 0.08, -0.13, -0.04, 0.06, -0.13, -0.04, 0.06, 0.16, 0.0, 0.0, 0.16, 0.0, -0.05, 0.16, 0.0, -0.05, -0.05, -0.14, 0.04, -0.08, -0.14, 0.0, -0.08, -0.14, 0.0, 0.0, 0.11, 0.11, -0.04, 0.08, 0.13, -0.04, 0.08, 0.13, -0.13, -0.04, 0.06, -0.16, 0.0, 0.05, -0.16, 0.0, 0.05, 0.16, 0.0, -0.05, 0.13, 0.04, -0.06, 0.13, 0.04, -0.06, -0.08, -0.14, 0.0, -0.05, -0.14, -0.04, -0.05, -0.14, -0.04, -0.04, 0.08, 0.13, -0.02, 0.04, 0.15, -0.02, 0.04, 0.15, -0.16, 0.0, 0.05, -0.16, 0.0, 0.0, -0.16, 0.0, 0.0, -0.15, 0.04, 0.02, -0.16, 0.0, 0.05, -0.16, 0.0, 0.05, 0.13, 0.04, -0.06, 0.11, 0.08, -0.08, 0.11, 0.08, -0.08, -0.16, 0.0, 0.05, -0.13, 0.0, 0.09, -0.13, 0.0, 0.09, -0.16, 0.0, 0.0, -0.16, 0.0, -0.05, -0.16, 0.0, -0.05, 0.11, 0.08, -0.08, 0.1, 0.11, -0.04, 0.1, 0.11, -0.04, -0.05, -0.14, -0.04, -0.02, -0.14, -0.08, -0.02, -0.14, -0.08, -0.16, 0.0, -0.05, -0.13, -0.04, -0.06, -0.13, -0.04, -0.06, -0.02, -0.14, -0.08, 0.02, -0.14, -0.06, 0.02, -0.14, -0.06, 0.1, 0.11, -0.04, 0.09, 0.14, 0.0, 0.09, 0.14, 0.0, -0.13, 0.0, 0.09, -0.1, 0.0, 0.13, -0.1, 0.0, 0.13, -0.13, -0.04, -0.06, -0.11, -0.08, -0.08, -0.11, -0.08, -0.08, 0.09, 0.14, 0.0, 0.1, 0.11, 0.04, 0.1, 0.11, 0.04, 0.02, -0.14, -0.06, 0.07, -0.14, -0.05, 0.07, -0.14, -0.05, -0.1, 0.0, 0.13, -0.07, 0.04, 0.13, -0.07, 0.04, 0.13, -0.11, -0.08, -0.08, -0.1, -0.11, -0.04, -0.1, -0.11, -0.04, 0.07, -0.14, -0.05, 0.07, -0.14, 0.0, 0.07, -0.14, 0.0, 0.0, -0.11, -0.11, -0.02, -0.14, -0.08, -0.02, -0.14, -0.08, 0.1, 0.11, 0.04, 0.11, 0.08, 0.08, 0.11, 0.08, 0.08, -0.07, 0.04, 0.13, -0.04, 0.08, 0.13, -0.04, 0.08, 0.13, -0.02, -0.14, -0.08, -0.07, -0.11, -0.08, -0.07, -0.11, -0.08, 0.11, 0.08, 0.08, 0.13, 0.04, 0.06, 0.13, 0.04, 0.06, 0.07, -0.14, 0.0, 0.07, -0.14, 0.05, 0.07, -0.14, 0.05, -0.04, 0.08, 0.13, -0.05, 0.11, 0.09, -0.05, 0.11, 0.09, -0.02, 0.14, 0.06, 0.02, 0.14, 0.08, 0.02, 0.14, 0.08, 0.07, -0.14, 0.05, 0.02, -0.14, 0.06, 0.02, -0.14, 0.06, 0.02, -0.14, -0.06, 0.07, -0.14, -0.05, 0.01, -0.38, -0.01, -0.02, 0.14, 0.06, 0.0, 0.38, 0.01, -0.01, 0.38, 0.01, 0.1, -0.11, -0.02, 0.28, -0.18, -0.19, 0.28, -0.17, -0.18, -0.15, 0.04, -0.02, -0.14, 0.08, 0.0, -0.28, 0.17, -0.18, -0.07, 0.14, 0.0, -0.07, 0.14, 0.05, -0.01, 0.38, 0.01, 0.15, -0.04, -0.02, 0.14, -0.08, 0.0, 0.28, -0.17, -0.18, -0.05, -0.14, -0.04, -0.02, -0.14, -0.08, 0.0, -0.38, -0.01, 0.0, -0.11, -0.11, -0.09, -0.18, -0.32, -0.08, -0.17, -0.33, -0.15, 0.04, -0.02, -0.29, 0.16, -0.19, -0.29, 0.15, -0.19, -0.07, 0.14, 0.0, -0.01, 0.38, 0.0, -0.01, 0.38, -0.01, 0.02, -0.04, -0.15, 0.04, -0.08, -0.13, -0.08, -0.17, -0.33, -0.13, 0.0, -0.09, -0.16, 0.0, -0.05, -0.29, 0.15, -0.19, 0.07, -0.14, 0.0, 0.01, -0.38, 0.0, 0.01, -0.38, -0.01, -0.02, 0.14, -0.06, -0.07, 0.14, -0.05, -0.01, 0.38, -0.01, 0.02, -0.04, -0.15, -0.09, -0.16, -0.33, -0.09, -0.15, -0.33, -0.02, 0.14, -0.06, 0.0, 0.38, -0.01, 0.0, 0.38, -0.01, -0.05, 0.0, -0.15, 0.0, 0.0, -0.17, -0.09, -0.15, -0.33, -0.13, 0.0, -0.09, -0.28, 0.15, -0.2, -0.27, 0.15, -0.21, 0.07, -0.14, 0.0, 0.07, -0.14, 0.05, 0.01, -0.38, 0.01, 0.05, 0.14, -0.04, 0.02, 0.14, -0.08, 0.0, 0.38, -0.01, -0.07, 0.04, -0.13, -0.1, 0.0, -0.13, -0.27, 0.15, -0.21, 0.1, -0.11, 0.02, 0.14, -0.08, 0.0, 0.28, -0.17, 0.18, -0.05, 0.0, -0.15, -0.1, -0.15, -0.33, -0.11, -0.15, -0.33, -0.15, 0.04, 0.02, -0.29, 0.16, 0.19, -0.28, 0.17, 0.18, 0.02, -0.14, 0.06, -0.02, -0.14, 0.08, 0.0, -0.38, 0.01, 0.05, 0.14, -0.04, 0.01, 0.38, 0.0, 0.01, 0.38, 0.0, -0.1, -0.04, -0.11, -0.09, 0.0, -0.13, -0.11, -0.15, -0.33, -0.1, 0.11, 0.02, -0.14, 0.08, 0.0, -0.28, 0.17, 0.18, 0.05, 0.14, 0.04, 0.08, 0.14, 0.0, 0.01, 0.38, 0.0, 0.15, -0.04, 0.02, 0.29, -0.16, 0.19, 0.28, -0.17, 0.18, -0.1, -0.04, -0.11, -0.12, -0.16, -0.32, -0.12, -0.17, -0.32, -0.1, 0.11, 0.02, -0.28, 0.18, 0.19, -0.27, 0.18, 0.19, -0.07, -0.11, -0.08, -0.11, -0.08, -0.08, -0.12, -0.17, -0.32, -0.05, 0.11, 0.09, -0.07, 0.14, 0.05, -0.27, 0.18, 0.19, 0.15, -0.04, 0.02, 0.16, 0.0, 0.05, 0.29, -0.15, 0.19, 0.05, 0.14, 0.04, 0.01, 0.38, 0.0, 0.0, 0.38, 0.01, 0.02, -0.14, 0.06, 0.0, -0.38, 0.01, 0.01, -0.38, 0.01, -0.02, 0.14, 0.06, 0.02, 0.14, 0.08, 0.0, 0.38, 0.01, -0.05, 0.11, 0.09, -0.27, 0.18, 0.2, -0.26, 0.17, 0.21, 0.13, 0.0, 0.09, 0.1, 0.0, 0.13, 0.27, -0.15, 0.21, 0.13, 0.04, 0.06, 0.34, 0.16, 0.01, 0.34, 0.17, 0.01, -0.07, -0.11, -0.08, -0.11, -0.18, -0.32, -0.1, -0.18, -0.32, -0.07, 0.04, 0.13, -0.04, 0.08, 0.13, -0.26, 0.17, 0.21, -0.05, -0.14, 0.04, -0.01, -0.38, 0.0, 0.0, -0.38, 0.01, 0.1, 0.11, 0.04, 0.11, 0.08, 0.08, 0.34, 0.17, 0.01, 0.0, -0.11, -0.11, -0.02, -0.14, -0.08, -0.1, -0.18, -0.32, -0.1, -0.11, -0.04, -0.34, -0.18, 0.0, -0.34, -0.17, -0.01, -0.07, 0.04, 0.13, -0.27, 0.16, 0.21, -0.27, 0.15, 0.21, 0.07, -0.04, 0.13, 0.04, -0.08, 0.13, 0.26, -0.17, 0.21, 0.1, 0.11, 0.04, 0.34, 0.18, 0.0, 0.33, 0.18, 0.0, -0.13, -0.04, -0.06, -0.11, -0.08, -0.08, -0.34, -0.17, -0.01, -0.13, 0.0, 0.09, -0.1, 0.0, 0.13, -0.27, 0.15, 0.21, 0.13, 0.0, 0.09, 0.28, -0.15, 0.2, 0.29, -0.15, 0.19, 0.1, 0.11, -0.04, 0.09, 0.14, 0.0, 0.33, 0.18, 0.0, 0.05, -0.11, 0.09, 0.27, -0.18, 0.2, 0.26, -0.17, 0.21, -0.13, -0.04, -0.06, -0.34, -0.16, -0.01, -0.35, -0.15, -0.01, 0.1, 0.11, -0.04, 0.34, 0.18, 0.0, 0.34, 0.17, -0.01, -0.16, 0.0, 0.0, -0.16, 0.0, -0.05, -0.35, -0.15, -0.01, -0.13, 0.0, 0.09, -0.28, 0.15, 0.2, -0.29, 0.15, 0.19, 0.07, -0.04, 0.13, 0.27, -0.16, 0.21, 0.27, -0.15, 0.21, -0.04, 0.08, 0.13, -0.05, 0.11, 0.09, -0.05, 0.11, 0.09, -0.02, 0.14, 0.06, 0.02, 0.14, 0.08, 0.02, 0.14, 0.08, 0.02, -0.14, 0.06, -0.02, -0.14, 0.08, -0.02, -0.14, 0.08, 0.02, 0.14, 0.08, 0.05, 0.14, 0.04, 0.05, 0.14, 0.04, -0.05, 0.11, 0.09, -0.07, 0.14, 0.05, -0.07, 0.14, 0.05, 0.1, -0.11, 0.02, 0.14, -0.08, 0.0, 0.14, -0.08, 0.0, -0.07, -0.11, -0.08, -0.11, -0.08, -0.08, -0.11, -0.08, -0.08, -0.07, 0.14, 0.05, -0.1, 0.11, 0.02, -0.1, 0.11, 0.02, 0.07, -0.14, 0.0, 0.07, -0.14, 0.05, 0.07, -0.14, 0.05, -0.11, -0.08, -0.08, -0.1, -0.04, -0.11, -0.1, -0.04, -0.11, 0.05, 0.14, 0.04, 0.08, 0.14, 0.0, 0.08, 0.14, 0.0, -0.1, 0.11, 0.02, -0.14, 0.08, 0.0, -0.14, 0.08, 0.0, -0.1, -0.04, -0.11, -0.09, 0.0, -0.13, -0.09, 0.0, -0.13, 0.08, 0.14, 0.0, 0.05, 0.14, -0.04, 0.05, 0.14, -0.04, -0.14, 0.08, 0.0, -0.15, 0.04, 0.02, -0.15, 0.04, 0.02, 0.07, -0.14, -0.05, 0.07, -0.14, 0.0, 0.07, -0.14, 0.0, -0.09, 0.0, -0.13, -0.05, 0.0, -0.15, -0.05, 0.0, -0.15, -0.07, 0.04, -0.13, -0.1, 0.0, -0.13, -0.1, 0.0, -0.13, 0.05, 0.14, -0.04, 0.02, 0.14, -0.08, 0.02, 0.14, -0.08, -0.1, 0.0, -0.13, -0.13, 0.0, -0.09, -0.13, 0.0, -0.09, -0.05, 0.0, -0.15, 0.0, 0.0, -0.17, 0.0, 0.0, -0.17, -0.05, -0.14, -0.04, -0.02, -0.14, -0.08, -0.02, -0.14, -0.08, 0.02, 0.14, -0.08, -0.02, 0.14, -0.06, -0.02, 0.14, -0.06, 0.0, 0.0, -0.17, 0.02, -0.04, -0.15, 0.02, -0.04, -0.15, 0.02, -0.14, -0.06, 0.07, -0.14, -0.05, 0.07, -0.14, -0.05, -0.02, 0.14, -0.06, -0.07, 0.14, -0.05, -0.07, 0.14, -0.05, -0.13, 0.0, -0.09, -0.16, 0.0, -0.05, -0.16, 0.0, -0.05, 0.02, -0.04, -0.15, 0.04, -0.08, -0.13, 0.04, -0.08, -0.13, -0.05, -0.14, 0.04, -0.08, -0.14, 0.0, -0.08, -0.14, 0.0, -0.07, 0.14, -0.05, -0.07, 0.14, 0.0, -0.07, 0.14, 0.0, -0.16, 0.0, -0.05, -0.15, 0.04, -0.02, -0.15, 0.04, -0.02, 0.04, -0.08, -0.13, 0.0, -0.11, -0.11, 0.0, -0.11, -0.11, -0.02, -0.14, -0.08, 0.02, -0.14, -0.06, 0.02, -0.14, -0.06, 0.15, -0.04, -0.02, 0.14, -0.08, 0.0, 0.14, -0.08, 0.0, -0.07, 0.14, 0.0, -0.07, 0.14, 0.05, -0.07, 0.14, 0.05, -0.15, 0.04, -0.02, -0.14, 0.08, 0.0, -0.14, 0.08, 0.0, -0.08, -0.14, 0.0, -0.05, -0.14, -0.04, -0.05, -0.14, -0.04, 0.14, -0.08, 0.0, 0.1, -0.11, -0.02, 0.1, -0.11, -0.02, -0.07, 0.14, 0.05, -0.02, 0.14, 0.06, -0.02, 0.14, 0.06, -0.14, 0.08, 0.0, -0.1, 0.11, -0.02, -0.1, 0.11, -0.02, -0.1, 0.11, -0.02, -0.07, 0.14, -0.05, -0.07, 0.14, -0.05, 0.1, -0.11, -0.02, 0.07, -0.14, -0.05, 0.07, -0.14, -0.05, -0.07, 0.14, -0.05, -0.05, 0.11, -0.09, -0.05, 0.11, -0.09, 0.07, -0.14, -0.05, 0.05, -0.11, -0.09, 0.05, -0.11, -0.09, -0.07, -0.11, 0.08, -0.02, -0.14, 0.08, -0.02, -0.14, 0.08, -0.05, 0.11, -0.09, -0.04, 0.08, -0.13, -0.04, 0.08, -0.13, 0.05, -0.11, -0.09, 0.04, -0.08, -0.13, 0.04, -0.08, -0.13, -0.02, -0.14, 0.08, 0.0, -0.11, 0.11, 0.0, -0.11, 0.11, -0.04, 0.08, -0.13, -0.07, 0.04, -0.13, -0.07, 0.04, -0.13, 0.04, -0.08, -0.13, 0.07, -0.04, -0.13, 0.07, -0.04, -0.13, 0.1, 0.04, -0.11, 0.09, 0.0, -0.13, 0.09, 0.0, -0.13, 0.09, 0.0, -0.13, 0.05, 0.0, -0.15, 0.05, 0.0, -0.15, 0.07, -0.04, -0.13, 0.1, 0.0, -0.13, 0.1, 0.0, -0.13, 0.0, -0.11, 0.11, 0.04, -0.08, 0.13, 0.04, -0.08, 0.13, 0.1, 0.0, -0.13, 0.13, 0.0, -0.09, 0.13, 0.0, -0.09, 0.04, -0.08, 0.13, 0.02, -0.04, 0.15, 0.02, -0.04, 0.15, 0.05, 0.0, -0.15, 0.0, 0.0, -0.17, 0.0, 0.0, -0.17, 0.13, 0.0, -0.09, 0.16, 0.0, -0.05, 0.16, 0.0, -0.05, 0.02, -0.04, 0.15, 0.0, 0.0, 0.17, 0.0, 0.0, 0.17, 0.0, 0.0, -0.17, -0.02, 0.04, -0.15, -0.02, 0.04, -0.15, -0.01, -0.38, 0.0, 0.0, -0.39, 0.0, -0.01, -0.38, 0.0, 0.0, -0.38, -0.01, 0.0, -0.39, 0.0, -0.01, -0.38, 0.0, 0.01, -0.38, 0.0, 0.0, -0.39, 0.0, 0.0, -0.38, -0.01, 0.0, -0.38, 0.01, 0.0, -0.39, 0.0, 0.01, -0.38, 0.0, -0.01, -0.38, 0.0, 0.0, -0.39, 0.0, 0.0, -0.38, 0.01, 0.29, -0.16, 0.19, 0.28, -0.17, 0.2, 0.28, -0.18, 0.19, 0.28, -0.15, 0.2, 0.28, -0.17, 0.2, 0.29, -0.16, 0.19, 0.27, -0.16, 0.21, 0.28, -0.17, 0.2, 0.28, -0.15, 0.2, 0.27, -0.18, 0.2, 0.28, -0.17, 0.2, 0.27, -0.16, 0.21, 0.28, -0.18, 0.19, 0.28, -0.17, 0.2, 0.27, -0.18, 0.2, -0.09, -0.18, 0.32, -0.1, -0.17, 0.33, -0.11, -0.18, 0.32, -0.09, -0.16, 0.33, -0.1, -0.17, 0.33, -0.09, -0.18, 0.32, -0.1, -0.15, 0.33, -0.1, -0.17, 0.33, -0.09, -0.16, 0.33, -0.12, -0.16, 0.32, -0.1, -0.17, 0.33, -0.1, -0.15, 0.33, -0.11, -0.18, 0.32, -0.1, -0.17, 0.33, -0.12, -0.16, 0.32, -0.34, -0.18, 0.0, -0.35, -0.17, 0.0, -0.34, -0.18, 0.0, -0.34, -0.16, 0.01, -0.35, -0.17, 0.0, -0.34, -0.18, 0.0, -0.35, -0.15, 0.0, -0.35, -0.17, 0.0, -0.34, -0.16, 0.01, -0.34, -0.16, -0.01, -0.35, -0.17, 0.0, -0.35, -0.15, 0.0, -0.34, -0.18, 0.0, -0.35, -0.17, 0.0, -0.34, -0.16, -0.01, -0.11, -0.18, -0.32, -0.1, -0.17, -0.33, -0.09, -0.18, -0.32, -0.12, -0.16, -0.32, -0.1, -0.17, -0.33, -0.11, -0.18, -0.32, -0.1, -0.15, -0.33, -0.1, -0.17, -0.33, -0.12, -0.16, -0.32, -0.09, -0.16, -0.33, -0.1, -0.17, -0.33, -0.1, -0.15, -0.33, -0.09, -0.18, -0.32, -0.1, -0.17, -0.33, -0.09, -0.16, -0.33, 0.28, -0.18, -0.19, 0.28, -0.17, -0.2, 0.29, -0.16, -0.19, 0.27, -0.18, -0.2, 0.28, -0.17, -0.2, 0.28, -0.18, -0.19, 0.27, -0.16, -0.21, 0.28, -0.17, -0.2, 0.27, -0.18, -0.2, 0.28, -0.15, -0.2, 0.28, -0.17, -0.2, 0.27, -0.16, -0.21, 0.29, -0.16, -0.19, 0.28, -0.17, -0.2, 0.28, -0.15, -0.2, 0.1, 0.15, 0.33, 0.1, 0.17, 0.33, 0.09, 0.16, 0.33, 0.12, 0.16, 0.32, 0.1, 0.17, 0.33, 0.1, 0.15, 0.33, 0.11, 0.18, 0.32, 0.1, 0.17, 0.33, 0.12, 0.16, 0.32, 0.09, 0.18, 0.32, 0.1, 0.17, 0.33, 0.11, 0.18, 0.32, 0.09, 0.16, 0.33, 0.1, 0.17, 0.33, 0.09, 0.18, 0.32, -0.28, 0.15, 0.2, -0.28, 0.17, 0.2, -0.29, 0.16, 0.19, -0.27, 0.16, 0.21, -0.28, 0.17, 0.2, -0.28, 0.15, 0.2, -0.27, 0.18, 0.2, -0.28, 0.17, 0.2, -0.27, 0.16, 0.21, -0.28, 0.18, 0.19, -0.28, 0.17, 0.2, -0.27, 0.18, 0.2, -0.29, 0.16, 0.19, -0.28, 0.17, 0.2, -0.28, 0.18, 0.19, -0.28, 0.15, -0.2, -0.28, 0.17, -0.2, -0.27, 0.16, -0.21, -0.29, 0.16, -0.19, -0.28, 0.17, -0.2, -0.28, 0.15, -0.2, -0.28, 0.18, -0.19, -0.28, 0.17, -0.2, -0.29, 0.16, -0.19, -0.27, 0.18, -0.2, -0.28, 0.17, -0.2, -0.28, 0.18, -0.19, -0.27, 0.16, -0.21, -0.28, 0.17, -0.2, -0.27, 0.18, -0.2, 0.1, 0.15, -0.33, 0.1, 0.17, -0.33, 0.12, 0.16, -0.32, 0.09, 0.16, -0.33, 0.1, 0.17, -0.33, 0.1, 0.15, -0.33, 0.09, 0.18, -0.32, 0.1, 0.17, -0.33, 0.09, 0.16, -0.33, 0.11, 0.18, -0.32, 0.1, 0.17, -0.33, 0.09, 0.18, -0.32, 0.12, 0.16, -0.32, 0.1, 0.17, -0.33, 0.11, 0.18, -0.32, 0.35, 0.15, 0.0, 0.35, 0.17, 0.0, 0.34, 0.16, 0.01, 0.34, 0.16, -0.01, 0.35, 0.17, 0.0, 0.35, 0.15, 0.0, 0.34, 0.18, 0.0, 0.35, 0.17, 0.0, 0.34, 0.16, -0.01, 0.34, 0.18, 0.0, 0.35, 0.17, 0.0, 0.34, 0.18, 0.0, 0.34, 0.16, 0.01, 0.35, 0.17, 0.0, 0.34, 0.18, 0.0, 0.01, 0.38, 0.0, 0.0, 0.39, 0.0, 0.0, 0.38, 0.01, 0.01, 0.38, 0.0, 0.0, 0.39, 0.0, 0.01, 0.38, 0.0, 0.0, 0.38, -0.01, 0.0, 0.39, 0.0, 0.01, 0.38, 0.0, -0.01, 0.38, 0.0, 0.0, 0.39, 0.0, 0.0, 0.38, -0.01, 0.0, 0.38, 0.01, 0.0, 0.39, 0.0, -0.01, 0.38, 0.0, -0.1, 0.11, -0.02, -0.28, 0.18, -0.19, -0.28, 0.17, -0.18, -0.05, -0.14, 0.04, -0.08, -0.14, 0.0, -0.01, -0.38, 0.0, 0.02, -0.14, -0.06, 0.0, -0.38, -0.01, 0.0, -0.38, -0.01, -0.1, 0.11, -0.02, -0.07, 0.14, -0.05, -0.27, 0.18, -0.19, 0.1, -0.11, -0.02, 0.07, -0.14, -0.05, 0.27, -0.18, -0.19, -0.05, 0.11, -0.09, -0.27, 0.18, -0.2, -0.27, 0.18, -0.19, 0.05, -0.11, -0.09, 0.27, -0.18, -0.2, 0.27, -0.18, -0.19, -0.05, -0.14, -0.04, -0.01, -0.38, 0.0, -0.01, -0.38, 0.0, -0.07, -0.11, 0.08, -0.02, -0.14, 0.08, -0.1, -0.18, 0.32, -0.05, 0.11, -0.09, -0.04, 0.08, -0.13, -0.26, 0.17, -0.21, 0.05, -0.11, -0.09, 0.04, -0.08, -0.13, 0.26, -0.17, -0.21, 0.0, -0.11, 0.11, -0.09, -0.18, 0.32, -0.1, -0.18, 0.32, -0.07, 0.04, -0.13, -0.27, 0.16, -0.21, -0.26, 0.17, -0.21, 0.07, -0.04, -0.13, 0.27, -0.16, -0.21, 0.26, -0.17, -0.21, 0.1, 0.04, -0.11, 0.09, 0.0, -0.13, 0.11, 0.15, -0.33, 0.05, 0.0, -0.15, 0.1, 0.15, -0.33, 0.11, 0.15, -0.33, 0.07, -0.04, -0.13, 0.1, 0.0, -0.13, 0.27, -0.15, -0.21, 0.0, -0.11, 0.11, 0.04, -0.08, 0.13, -0.08, -0.17, 0.33, 0.13, 0.0, -0.09, 0.28, -0.15, -0.2, 0.27, -0.15, -0.21, 0.02, -0.04, 0.15, -0.09, -0.16, 0.33, -0.08, -0.17, 0.33, 0.05, 0.0, -0.15, 0.0, 0.0, -0.17, 0.09, 0.15, -0.33, 0.13, 0.0, -0.09, 0.16, 0.0, -0.05, 0.29, -0.15, -0.19, 0.02, -0.04, 0.15, 0.0, 0.0, 0.17, -0.09, -0.15, 0.33, -0.02, 0.04, -0.15, 0.09, 0.16, -0.33, 0.09, 0.15, -0.33, 0.15, -0.04, -0.02, 0.29, -0.16, -0.19, 0.29, -0.15, -0.19, -0.05, 0.0, 0.15, -0.1, -0.15, 0.33, -0.09, -0.15, 0.33, -0.02, 0.04, 0.15, 0.0, 0.0, 0.17, 0.09, 0.15, 0.33, -0.02, 0.04, -0.15, -0.04, 0.08, -0.13, 0.08, 0.17, -0.33, 0.05, 0.0, 0.15, 0.1, 0.15, 0.33, 0.09, 0.15, 0.33, -0.05, 0.0, 0.15, -0.09, 0.0, 0.13, -0.11, -0.15, 0.33, 0.0, 0.11, -0.11, 0.09, 0.18, -0.32, 0.08, 0.17, -0.33, -0.1, -0.04, 0.11, -0.12, -0.16, 0.32, -0.11, -0.15, 0.33, 0.0, 0.11, -0.11, 0.02, 0.14, -0.08, 0.1, 0.18, -0.32, 0.05, 0.0, 0.15, 0.09, 0.0, 0.13, 0.11, 0.15, 0.33, -0.1, -0.04, 0.11, -0.11, -0.08, 0.08, -0.12, -0.17, 0.32, 0.07, 0.11, -0.08, 0.11, 0.18, -0.32, 0.1, 0.18, -0.32, 0.1, 0.04, 0.11, 0.12, 0.16, 0.32, 0.11, 0.15, 0.33, -0.07, -0.11, 0.08, -0.11, -0.18, 0.32, -0.12, -0.17, 0.32, -0.1, -0.11, -0.04, -0.09, -0.14, 0.0, -0.33, -0.18, 0.0, 0.07, 0.11, -0.08, 0.11, 0.08, -0.08, 0.12, 0.17, -0.32, 0.1, 0.04, 0.11, 0.11, 0.08, 0.08, 0.12, 0.17, 0.32, -0.1, -0.11, 0.04, -0.34, -0.18, 0.0, -0.33, -0.18, 0.0, 0.1, 0.04, -0.11, 0.12, 0.16, -0.32, 0.12, 0.17, -0.32, 0.07, 0.11, 0.08, 0.11, 0.18, 0.32, 0.12, 0.17, 0.32, 0.13, 0.04, 0.06, 0.16, 0.0, 0.05, 0.35, 0.15, 0.01, 0.16, 0.0, 0.0, 0.35, 0.15, 0.0, 0.35, 0.15, 0.01, 0.07, 0.11, 0.08, 0.02, 0.14, 0.08, 0.1, 0.18, 0.32, -0.1, -0.11, 0.04, -0.11, -0.08, 0.08, -0.34, -0.17, 0.01, 0.0, 0.11, 0.11, 0.09, 0.18, 0.32, 0.1, 0.18, 0.32, -0.13, -0.04, 0.06, -0.34, -0.16, 0.01, -0.34, -0.17, 0.01, 0.16, 0.0, 0.0, 0.16, 0.0, -0.05, 0.35, 0.15, -0.01, 0.1, -0.11, 0.02, 0.28, -0.18, 0.19, 0.27, -0.18, 0.19, 0.0, 0.11, 0.11, -0.04, 0.08, 0.13, 0.08, 0.17, 0.33, -0.13, -0.04, 0.06, -0.16, 0.0, 0.05, -0.35, -0.15, 0.01, 0.13, 0.04, -0.06, 0.34, 0.16, -0.01, 0.35, 0.15, -0.01, 0.05, -0.11, 0.09, 0.07, -0.14, 0.05, 0.27, -0.18, 0.19, -0.02, 0.04, 0.15, 0.09, 0.16, 0.33, 0.08, 0.17, 0.33, -0.16, 0.0, 0.0, -0.35, -0.15, 0.0, -0.35, -0.15, 0.01, -0.15, 0.04, 0.02, -0.16, 0.0, 0.05, -0.29, 0.15, 0.19, 0.13, 0.04, -0.06, 0.11, 0.08, -0.08, 0.34, 0.17, -0.01];
                var fullposition = refmesh.map(function (v,i) {return position[i % 3] + v;});
                var fullcolor = refmesh.map(function (v,i) {return i % 3 ? 0 : 1;}); //return color[i % 3]
                var shape = new NGL.Shape("clash");
                var meshBuffer = new NGL.MeshBuffer({
                    position: new Float32Array(fullposition),
                    color: new Float32Array(fullcolor)
                });
                shape.addBuffer(meshBuffer);
                var shapeComp = protein.stage.addComponentFromObject(shape);
                shapeComp.addRepresentation("buffer");
                setInterval(function () {
                    shapeComp.controls.spin([1, 0, 0], 30)
                    }, 100);
                //spikyball made and added.
            } //end if
        }); //end neigh atom
    }); //end this atom
};


NGL.specialOps.removeImg = function () {
    var img = '#'+myData.id+' img';
    if (!! $(img).length) { //there is an image. Remove and get the sizes
		var w=$(img).width();
		var h=$(img).height();
		$(img).detach();
		$(img).detach();
		$(img).css('width',w).css('height',h);
    }
};

NGL.specialOps._run_loadFx = function (protein, fx) {
    if (typeof fx === 'function') {
        fx(protein)}
    else {
        protein.addRepresentation("cartoon", {smoothSheet: true}); protein.autoView();
    }
    return protein;
};

NGL.specialOps.load = function (option) {
    var index; //option could be blob or string or dictionary in future.
    if (typeof option === "undefined") {index = myData.current_index;} //use is lazy.
    else if (typeof option === "number") {index = option;} //user gave index.
    else if (typeof option === 'object') { //user gave a protein object
        myData.proteins.push(object);
        index = myData.proteins.length - 1;
    }
    else if (typeof option === "string") { // user gave pdb code.
        myData.proteins.push({type: 'rcsb', value: option});
        index = myData.proteins.length - 1;
    }
    else {throw 'No idea what this use submitted option is.'}
    // check if the one asked for is loaded.
    if ( (index === myData.current_index)) {
        var protein = NGL.stageIds[myData.id].getComponentByType('structure');
        //if (typeof myData.proteins[index].loadFx === 'function') {myData.proteins[index].loadFx(protein)};
        return protein
    }
    else {myData.current_index = index}
    // deal with image.
    if (myData.imagemode) { NGL.specialOps.removeImg();}
    // toggle structure
    // - check if there is a stage.
    if (! NGL.getStage(myData.id)) {
        NGL.stageIds[myData.id] = new NGL.Stage( "viewport",{backgroundColor: myData.backgroundColor});
        window.addEventListener( "resize", function( event ){NGL.stageIds[myData.id].handleResize();}, false );
    } else { //tabula rasa!
        NGL.stageIds[myData.id].removeAllComponents();
    }
    //new model. Force reset
    if (myData.proteins[index].type === 'file') {
        return NGL.stageIds[myData.id].loadFile(myData.proteins[index].value).then(function (protein) {
            NGL.specialOps._run_loadFx(protein, myData.proteins[index].loadFx);});

    }
    else if (myData.proteins[index].type === 'data') {
        var ext = myData.proteins[index].ext || 'pdb';
        if (typeof myData.proteins[index].value === 'string') {
            return NGL.stageIds[myData.id].loadFile(new Blob [myData.proteins[index].value], { ext: ext }).then(function (protein) {
            NGL.specialOps._run_loadFx(protein, myData.proteins[index].loadFx);});
        } else { //is a blob already
            return NGL.stageIds[myData.id].loadFile(myData.proteins[index].value, { ext: ext }).then(function (protein) {
            NGL.specialOps._run_loadFx(protein, myData.proteins[index].loadFx);});
        }
    }
    else { //PDB code.
        return NGL.stageIds[myData.id].loadFile('rcsb://'+myData.proteins[index].value.replace('rcsb://','').toLowerCase().slice(0,4)).then(function (protein) {
            NGL.specialOps._run_loadFx(protein, myData.proteins[index].loadFx);});
    }
};

NGL.specialOps.multiLoader = function (id, proteins, image, backgroundColor, startIndex) {
    /*
    Note that the multiloader does not support multiple viewports.
    id is the id.
    proteins is a list of {name: 'unique_name', type: 'rcsb' (default) | 'file' | 'data', value: xxx, 'ext': 'pdb' , loadFx: xxx}
    where loadFx is the function to run after loading.
    image is a boolean.
    background is a color (def white).
    The multiLoader calls the load function with an index of startIndex or zero.
    Do note that the function load returns a pr
     */
    startIndex = startIndex || 0;
    window.myData={current_index: -1, proteins: proteins, id: id, imagemode: !! image, backgroundColor: backgroundColor || 'white'};
    if (image) {$('#'+id+' img').click(function () {NGL.specialOps.load(startIndex);});}
    else {return NGL.specialOps.load(startIndex);}
};

NGL.getStage = function (id) {
    // returns a stage stored in stageIds ...
    // unless somehow a stage was given.
    if (typeof id === 'string') {
        id = id.replace('#','');
        if (id in NGL.stageIds) {
            return NGL.stageIds[id];
        }
        else if (window.stage !== undefined) {
            if (NGL.Debug) {console.log('No stored stage in .stageIds, but there is a window.stage...');}
            return window.stage;
        } else {
            if (NGL.Debug) {console.log('No stored stage in .stageIds nor is a window.stage...');}
            return undefined;
        }
    } else if (id.compList !== undefined) { //it's an Stage
        return id;

    } else if (id.stage !== undefined) { //it's an Component
        return id.stage;
    } else {
        if (NGL.Debug) {console.log('No idea what this is.');}
    }
};


/*
class _StageX extends NGL.Stage {
    constructor(idOrElement, params) {
        super(idOrElement, params);
        this.getComponentByType = function (stage,type) {
            //gets first structure
            type = type || 'structure';
            for (var component in stage.compList) {
                if (stage.compList[component].type === type) {return stage.compList[component]}
            }
            return undefined;
        };
    }
}
*/

NGL.Stage.prototype.getComponentByType = function(type) {
    //gets first structure
    type = type || 'structure';
    for (var component in this.compList) {
        if (this.compList[component].type === type) {return this.compList[component]}
    }
    return undefined;
};

$(document).ready(function () {
    $('[data-toggle="protein"]').click(function() {
            var selection =$(this).data('selection'); //mandatory.
            var color = $(this).data('color'); //optional settings in methods
            var radius = $(this).data('radius');
            var tolerance = $(this).data('tolerance');
            var structure = $(this).data('load');
            var id = 'viewport';
            if ($(this).data('target')) {id = $(this).data('target').replace('#','')}
            else if (!! $(this).attr('href') && !! $(this).attr('href').replace('#','')) { // # alone is not enough
                id = $(this).attr('href');
            }
            var title = $(this).data('title');
            var focus = $(this).data('focus') || 'domain'; // residue | domain | clash
            if (structure) {
                NGL.specialOps.load(structure);
            }
            else if (focus === 'residue'){
                NGL.specialOps.show_residue(id, selection, color, radius);
            }
            else if (focus === 'domain' || focus === 'region'){
                NGL.specialOps.show_domain(id, selection, color);
            }
            else if (focus === 'clash'){
                NGL.specialOps.show_clash(id, selection, color, radius, tolerance);
            }
            else {throw 'ValueError: odd data-focus tag.'}
            if (title) {
                var titleEl = 'label[for="'+id+'"]';
                if (! $(titleEl).length) {
                    $('#'+id).after('<label for="'+id+'" style="text-align: center; display: block;">TITLE</label>');
                }
                $(titleEl).html(title).fadeIn( 1000 ).fadeOut(1000);
            }
        });
});
