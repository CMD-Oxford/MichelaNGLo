
    def get_js(self, viewport='viewport', inner_tabbed=3, uniform_non_carbon=False, image=False, stick='sym_licorice', **settings):
        code ='\n'
        code += 'window.stage = new NGL.Stage( "{viewport}",{{backgroundColor: "white"}});\n'.format(viewport=viewport)
        if self.raw_pdb:
            code += 'var stringBlob = new Blob( [ pdbData ], { type: "text/plain"} );'
            loader=' stringBlob, { ext: "pdb" } '
        else:
            loader='"rcsb://' + (self.pdb if len(self.pdb) == 4 else self.pdb)+'"'
        code += 'stage.loadFile({loader}).then(function (protein) {{\n'.format(loader=loader)
        code += '   window.protein=protein;\n'+\
                '   {color}\n  {reps}\n   {orient}\n'.format(reps=self.get_reps(stick=stick), orient=self.get_view(output='string'), color=self.get_color(uniform_non_carbon)) +\
                '});\n'
        code += 'function saveImg() {stage.makeImage( {trim: true, antialias: true, transparent: false }).then(function (img) {window.img=img; NGL.download(img);});}'
        if image:
            code = """var imagemode=true;
function activate () {
    if (imagemode) {
        var w=$('#viewport img').width();
        var h=$('#viewport img').height();
        $('#viewport img').detach();
        $('#viewport p').detach();
        $('#viewport').css('width',w).css('height',h);
        """+code+"""
        imagemode = false;
    }
}
$('#viewport img').click(activate);
""".replace('viewport',viewport)
        if self.raw_pdb:
            if self.ss:
                return 'pdbData = `{1}\n{0}`;'.format(self.raw_pdb,'\n'.join(self.ss))+self.indent(code, inner_tabbed) #don't indent the raw data!
            else:
                return 'pdbData = `{0}`;'.format(self.raw_pdb) + self.indent(code, inner_tabbed)  # don't indent the raw data!
        else:
            return self.indent(code, inner_tabbed)
